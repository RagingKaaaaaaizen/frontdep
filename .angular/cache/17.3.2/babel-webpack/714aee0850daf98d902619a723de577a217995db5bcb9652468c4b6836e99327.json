{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { first } from 'rxjs/operators';\nlet StorageLocationAddComponent = class StorageLocationAddComponent {\n  constructor(storageLocationService, roomLocationService, alertService, router) {\n    this.storageLocationService = storageLocationService;\n    this.roomLocationService = roomLocationService;\n    this.alertService = alertService;\n    this.router = router;\n    this.model = {\n      locationType: '',\n      status: 'Active'\n    };\n    this.loading = false;\n    this.submitted = false;\n  }\n  onLocationTypeChange() {\n    // Reset room-specific fields when switching to storage type\n    if (this.model.locationType === 'storage') {\n      this.model.building = '';\n      this.model.floor = '';\n      this.model.roomNumber = '';\n      this.model.capacity = null;\n      this.model.status = 'Active';\n    }\n  }\n  saveLocation() {\n    this.submitted = true;\n    if (!this.model.name) {\n      this.alertService.error('Location name is required');\n      return;\n    }\n    if (!this.model.locationType) {\n      this.alertService.error('Location type is required');\n      return;\n    }\n    this.loading = true;\n    if (this.model.locationType === 'storage') {\n      // Save as storage location\n      const storageData = {\n        name: this.model.name,\n        description: this.model.description\n      };\n      this.storageLocationService.create(storageData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Storage location created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/add/storage-location']);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    } else if (this.model.locationType === 'room') {\n      // Save as room location\n      const roomData = {\n        name: this.model.name,\n        description: this.model.description,\n        building: this.model.building,\n        floor: this.model.floor,\n        roomNumber: this.model.roomNumber,\n        capacity: this.model.capacity,\n        status: this.model.status\n      };\n      this.roomLocationService.create(roomData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Room location created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/add/storage-location']);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n};\nStorageLocationAddComponent = __decorate([Component({\n  selector: 'app-storage-location-add',\n  templateUrl: './storage-location-add.component.html',\n  styles: [`\n    .form-container {\n      padding: 20px 0;\n    }\n\n    .page-header {\n      background: white;\n      border-radius: 12px;\n      padding: 30px;\n      margin-bottom: 30px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n    }\n\n    .header-content {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      flex-wrap: wrap;\n      gap: 20px;\n    }\n\n    .header-title {\n      display: flex;\n      align-items: center;\n      gap: 15px;\n    }\n\n    .header-title i {\n      font-size: 2.5rem;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n    }\n\n    .page-title {\n      font-size: 2.5rem;\n      font-weight: bold;\n      color: #333;\n      margin: 0 0 5px 0;\n    }\n\n    .page-subtitle {\n      color: #666;\n      font-size: 1.1rem;\n      margin: 0;\n    }\n\n    .header-actions {\n      display: flex;\n      gap: 10px;\n      flex-wrap: wrap;\n    }\n\n    .form-card {\n      background: white;\n      border-radius: 12px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n      margin-bottom: 20px;\n      transition: all 0.3s ease;\n    }\n\n    .form-card:hover {\n      box-shadow: 0 4px 20px rgba(0,0,0,0.15);\n      transform: translateY(-2px);\n    }\n\n    .card {\n      border: none;\n      border-radius: 12px;\n      overflow: hidden;\n    }\n\n    .card-header {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n      padding: 20px;\n      font-weight: 600;\n      display: flex;\n      align-items: center;\n      gap: 10px;\n    }\n\n    .card-body {\n      padding: 30px;\n    }\n\n    .location-form {\n      max-width: 100%;\n    }\n\n    .room-fields {\n      background: #f8f9fa;\n      border-radius: 8px;\n      padding: 20px;\n      margin: 20px 0;\n      border-left: 4px solid #667eea;\n    }\n\n    .room-fields .form-label {\n      font-weight: 600;\n      color: #333;\n    }\n\n    .form-group {\n      margin-bottom: 25px;\n    }\n\n    .form-label {\n      display: block;\n      margin-bottom: 8px;\n      font-weight: 600;\n      color: #333;\n      font-size: 0.95rem;\n    }\n\n    .form-label i {\n      margin-right: 8px;\n      color: #667eea;\n      width: 16px;\n    }\n\n    .form-control {\n      border: 2px solid #e9ecef;\n      border-radius: 8px;\n      padding: 12px 16px;\n      font-size: 1rem;\n      transition: all 0.3s ease;\n      background-color: #fff;\n    }\n\n    .form-control:focus {\n      border-color: #667eea;\n      box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);\n      outline: none;\n    }\n\n    .form-control.is-invalid {\n      border-color: #dc3545;\n      box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);\n    }\n\n    .invalid-feedback {\n      display: block;\n      width: 100%;\n      margin-top: 5px;\n      font-size: 0.875rem;\n      color: #dc3545;\n    }\n\n    .form-actions {\n      display: flex;\n      gap: 15px;\n      justify-content: flex-end;\n      margin-top: 30px;\n      padding-top: 20px;\n      border-top: 1px solid #e9ecef;\n    }\n\n    .btn {\n      padding: 12px 24px;\n      border-radius: 8px;\n      font-weight: 600;\n      font-size: 0.95rem;\n      transition: all 0.3s ease;\n      border: 2px solid transparent;\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .btn:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n    }\n\n    .btn-primary {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      border-color: transparent;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);\n      color: white;\n    }\n\n    .btn-primary:disabled {\n      background: #6c757d;\n      opacity: 0.6;\n      transform: none;\n      box-shadow: none;\n    }\n\n    .btn-outline-secondary {\n      border-color: #6c757d;\n      color: #6c757d;\n      background: transparent;\n    }\n\n    .btn-outline-secondary:hover {\n      background: #6c757d;\n      color: white;\n    }\n\n    .spinner-border-sm {\n      width: 1rem;\n      height: 1rem;\n    }\n\n    /* Responsive */\n    @media (max-width: 768px) {\n      .header-content {\n        flex-direction: column;\n        align-items: stretch;\n      }\n\n      .header-actions {\n        justify-content: center;\n      }\n\n      .form-actions {\n        flex-direction: column;\n        gap: 10px;\n      }\n\n      .btn {\n        width: 100%;\n        justify-content: center;\n      }\n    }\n\n    @media (max-width: 480px) {\n      .page-title {\n        font-size: 2rem;\n      }\n\n      .card-body {\n        padding: 20px;\n      }\n    }\n  `]\n})], StorageLocationAddComponent);\nexport { StorageLocationAddComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}