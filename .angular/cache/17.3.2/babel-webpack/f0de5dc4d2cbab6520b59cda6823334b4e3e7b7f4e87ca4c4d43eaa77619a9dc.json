{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction PCAddEditComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"PC Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PCAddEditComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, PCAddEditComponent_div_19_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.name.errors.required);\n  }\n}\nfunction PCAddEditComponent_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const location_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", location_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", location_r2.name, \" \");\n  }\n}\nfunction PCAddEditComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Room Location is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PCAddEditComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, PCAddEditComponent_div_27_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.roomLocationId.errors.required);\n  }\n}\nfunction PCAddEditComponent_div_45_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Status is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PCAddEditComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, PCAddEditComponent_div_45_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.status.errors.required);\n  }\n}\nfunction PCAddEditComponent_div_55_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 32);\n  }\n}\nfunction PCAddEditComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"button\", 27);\n    i0.ɵɵtemplate(2, PCAddEditComponent_div_55_span_2_Template, 1, 0, \"span\", 28);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 29);\n    i0.ɵɵtext(5, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function PCAddEditComponent_div_55_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.goToStock());\n    });\n    i0.ɵɵelement(7, \"i\", 31);\n    i0.ɵɵtext(8, \" View Stock \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.loading || !ctx_r0.canSubmit());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loading);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.isAddMode ? \"Create PC\" : \"Update PC\", \" \");\n  }\n}\nfunction PCAddEditComponent_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"a\", 33);\n    i0.ɵɵtext(2, \"Back to List\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function PCAddEditComponent_div_56_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.goToStock());\n    });\n    i0.ɵɵelement(4, \"i\", 31);\n    i0.ɵɵtext(5, \" View Stock \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let PCAddEditComponent = /*#__PURE__*/(() => {\n  class PCAddEditComponent {\n    constructor(formBuilder, route, router, pcService, storageLocationService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.pcService = pcService;\n      this.storageLocationService = storageLocationService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n      this.roomLocations = [];\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      this.isViewMode = this.router.url.includes('/view/');\n      this.form = this.formBuilder.group({\n        name: ['', Validators.required],\n        serialNumber: [''],\n        roomLocationId: ['', Validators.required],\n        status: ['Active', Validators.required],\n        assignedTo: [''],\n        notes: ['']\n      });\n      this.loadRoomLocations();\n      if (!this.isAddMode) {\n        this.loadPC();\n      }\n      // Disable form in view mode\n      if (this.isViewMode) {\n        this.form.disable();\n      }\n    }\n    loadRoomLocations() {\n      this.storageLocationService.getAll().pipe(first()).subscribe(locations => {\n        this.roomLocations = locations;\n      });\n    }\n    loadPC() {\n      this.pcService.getById(this.id).pipe(first()).subscribe(pc => {\n        this.form.patchValue(pc);\n      });\n    }\n    get f() {\n      return this.form.controls;\n    }\n    canSubmit() {\n      return this.form.valid;\n    }\n    goToStock() {\n      this.router.navigate(['/stocks']);\n    }\n    onSubmit() {\n      this.submitted = true;\n      console.log('PC Add Form Submitted:', this.form.value);\n      console.log('Form Valid:', this.form.valid);\n      console.log('Can Submit:', this.canSubmit());\n      if (!this.canSubmit()) {\n        console.log('Form validation failed');\n        return;\n      }\n      this.loading = true;\n      const pcData = this.form.value;\n      console.log('PC Data to send:', pcData);\n      if (this.isAddMode) {\n        this.createPC(pcData);\n      } else {\n        this.updatePC(pcData);\n      }\n    }\n    createPC(pcData) {\n      console.log('Creating PC with data:', pcData);\n      this.pcService.create(pcData).pipe(first()).subscribe({\n        next: pc => {\n          console.log('PC created successfully:', pc);\n          this.alertService.success('PC created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          console.error('Error creating PC:', error);\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updatePC(pcData) {\n      this.pcService.update(this.id, pcData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('PC updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function PCAddEditComponent_Factory(t) {\n      return new (t || PCAddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.PCService), i0.ɵɵdirectiveInject(i3.StorageLocationService), i0.ɵɵdirectiveInject(i3.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PCAddEditComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 57,\n      vars: 17,\n      consts: [[1, \"container\"], [1, \"row\"], [1, \"col-12\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"card\"], [1, \"card-header\"], [1, \"fas\", \"fa-desktop\"], [1, \"card-body\"], [1, \"form-group\", \"col-md-6\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"roomLocationId\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"serialNumber\", 1, \"form-control\"], [\"formControlName\", \"status\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"Active\"], [\"value\", \"Inactive\"], [\"value\", \"Maintenance\"], [\"value\", \"Retired\"], [\"type\", \"text\", \"formControlName\", \"assignedTo\", 1, \"form-control\"], [1, \"form-group\"], [\"formControlName\", \"notes\", \"rows\", \"3\", 1, \"form-control\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [3, \"value\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"fas\", \"fa-boxes\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-primary\"]],\n      template: function PCAddEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function PCAddEditComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 2)(8, \"div\", 4)(9, \"div\", 5)(10, \"h5\");\n          i0.ɵɵelement(11, \"i\", 6);\n          i0.ɵɵtext(12, \" PC Information\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 7)(14, \"div\", 1)(15, \"div\", 8)(16, \"label\");\n          i0.ɵɵtext(17, \"PC Name *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 9);\n          i0.ɵɵtemplate(19, PCAddEditComponent_div_19_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 8)(21, \"label\");\n          i0.ɵɵtext(22, \"Room Location *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"select\", 11)(24, \"option\", 12);\n          i0.ɵɵtext(25, \"Select Room Location\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(26, PCAddEditComponent_option_26_Template, 2, 2, \"option\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(27, PCAddEditComponent_div_27_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"div\", 1)(29, \"div\", 8)(30, \"label\");\n          i0.ɵɵtext(31, \"Serial Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(32, \"input\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"div\", 8)(34, \"label\");\n          i0.ɵɵtext(35, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"select\", 15)(37, \"option\", 16);\n          i0.ɵɵtext(38, \"Active\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"option\", 17);\n          i0.ɵɵtext(40, \"Inactive\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"option\", 18);\n          i0.ɵɵtext(42, \"Maintenance\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"option\", 19);\n          i0.ɵɵtext(44, \"Retired\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(45, PCAddEditComponent_div_45_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(46, \"div\", 1)(47, \"div\", 8)(48, \"label\");\n          i0.ɵɵtext(49, \"Assigned To\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(50, \"input\", 20);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(51, \"div\", 21)(52, \"label\");\n          i0.ɵɵtext(53, \"Notes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(54, \"textarea\", 22);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(55, PCAddEditComponent_div_55_Template, 9, 3, \"div\", 23)(56, PCAddEditComponent_div_56_Template, 6, 0, \"div\", 23);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.isAddMode ? \"Add PC\" : ctx.isViewMode ? \"View PC\" : \"Edit PC\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f.name.errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.name.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f.roomLocationId.errors));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.roomLocations);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.roomLocationId.errors);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ctx.f.status.errors));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.status.errors);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isViewMode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isViewMode);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return PCAddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}