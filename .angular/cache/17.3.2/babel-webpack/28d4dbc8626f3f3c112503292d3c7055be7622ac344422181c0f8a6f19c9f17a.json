{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { MustMatch } from '@app/_helpers';\nlet UpdateComponent = class UpdateComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.account = this.accountService.accountValue;\n    this.loading = false;\n    this.submitted = false;\n    this.deleting = false;\n    this.message = '';\n    this.error = '';\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      title: [this.account.title, Validators.required],\n      firstName: [this.account.firstName, Validators.required],\n      lastName: [this.account.lastName, Validators.required],\n      email: [this.account.email, [Validators.required, Validators.email]],\n      password: ['', [Validators.minLength(6)]],\n      confirmPassword: ['']\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    this.message = '';\n    this.error = '';\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.accountService.update(this.account.id, this.form.value).pipe(first()).subscribe({\n      next: () => {\n        this.loading = false;\n        this.message = 'Profile updated successfully!';\n        setTimeout(() => {\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        }, 1500);\n      },\n      error: error => {\n        this.loading = false;\n        this.error = 'Error updating profile: ' + (error.error?.message || error.message || 'Unknown error');\n      }\n    });\n  }\n  onDelete() {\n    if (confirm('Are you sure you want to delete your account? This action cannot be undone.')) {\n      this.deleting = true;\n      this.accountService.delete(this.account.id).pipe(first()).subscribe({\n        next: () => {\n          this.deleting = false;\n          this.message = 'Account deleted successfully';\n          setTimeout(() => {\n            this.router.navigate(['/account/login']);\n          }, 1500);\n        },\n        error: error => {\n          this.deleting = false;\n          this.error = 'Error deleting account: ' + (error.error?.message || error.message || 'Unknown error');\n        }\n      });\n    }\n  }\n};\nUpdateComponent = __decorate([Component({\n  templateUrl: 'update.component.html',\n  styles: [`\n        .form-container {\n            padding: 20px 0;\n        }\n\n        .page-header {\n            background: white;\n            border-radius: 12px;\n            padding: 30px;\n            margin-bottom: 30px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n        }\n\n        .header-content {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            flex-wrap: wrap;\n            gap: 20px;\n        }\n\n        .header-title {\n            display: flex;\n            align-items: center;\n            gap: 15px;\n        }\n\n        .header-title i {\n            font-size: 2.5rem;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n        }\n\n        .page-title {\n            font-size: 2.5rem;\n            font-weight: bold;\n            color: #333;\n            margin: 0 0 5px 0;\n        }\n\n        .page-subtitle {\n            color: #666;\n            font-size: 1.1rem;\n            margin: 0;\n        }\n\n        .header-actions {\n            display: flex;\n            gap: 10px;\n            flex-wrap: wrap;\n        }\n\n        .alert {\n            border-radius: 8px;\n            border: none;\n            padding: 15px 20px;\n            margin-bottom: 20px;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n        }\n\n        .alert-success {\n            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);\n            color: white;\n        }\n\n        .alert-danger {\n            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);\n            color: white;\n        }\n\n        .btn-close {\n            background: none;\n            border: none;\n            color: white;\n            font-size: 1.2rem;\n            cursor: pointer;\n            padding: 0;\n            margin-left: auto;\n        }\n\n        .form-card {\n            background: white;\n            border-radius: 12px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            margin-bottom: 20px;\n            transition: all 0.3s ease;\n        }\n\n        .form-card:hover {\n            box-shadow: 0 4px 20px rgba(0,0,0,0.15);\n            transform: translateY(-2px);\n        }\n\n        .card {\n            border: none;\n            border-radius: 12px;\n            overflow: hidden;\n        }\n\n        .card-header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 20px;\n            font-weight: 600;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n        }\n\n        .card-body {\n            padding: 30px;\n        }\n\n        .profile-form {\n            max-width: 100%;\n        }\n\n        .form-group {\n            margin-bottom: 25px;\n        }\n\n        .form-label {\n            display: block;\n            margin-bottom: 8px;\n            font-weight: 600;\n            color: #333;\n            font-size: 0.95rem;\n        }\n\n        .form-label i {\n            margin-right: 8px;\n            color: #667eea;\n            width: 16px;\n        }\n\n        .form-control {\n            border: 2px solid #e9ecef;\n            border-radius: 8px;\n            padding: 12px 16px;\n            font-size: 1rem;\n            transition: all 0.3s ease;\n            background-color: #fff;\n        }\n\n        .form-control:focus {\n            border-color: #667eea;\n            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);\n            outline: none;\n        }\n\n        .form-control.is-invalid {\n            border-color: #dc3545;\n            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);\n        }\n\n        .form-row {\n            display: flex;\n            gap: 20px;\n            margin-bottom: 25px;\n        }\n\n        .form-row .form-group {\n            flex: 1;\n            margin-bottom: 0;\n        }\n\n        .invalid-feedback {\n            display: block;\n            width: 100%;\n            margin-top: 5px;\n            font-size: 0.875rem;\n            color: #dc3545;\n        }\n\n        .form-text {\n            font-size: 0.875rem;\n            color: #6c757d;\n            margin-top: 5px;\n        }\n\n        .password-section {\n            margin-top: 30px;\n            padding-top: 30px;\n            border-top: 2px solid #e9ecef;\n        }\n\n        .section-header {\n            margin-bottom: 20px;\n        }\n\n        .section-header h5 {\n            color: #333;\n            font-weight: 600;\n            margin-bottom: 5px;\n        }\n\n        .section-header h5 i {\n            color: #667eea;\n            margin-right: 8px;\n        }\n\n        .section-header p {\n            color: #666;\n            font-size: 0.9rem;\n            margin: 0;\n        }\n\n        .form-actions {\n            display: flex;\n            gap: 15px;\n            justify-content: flex-end;\n            margin-top: 30px;\n            padding-top: 20px;\n            border-top: 1px solid #e9ecef;\n        }\n\n        .btn {\n            padding: 12px 24px;\n            border-radius: 8px;\n            font-weight: 600;\n            font-size: 0.95rem;\n            transition: all 0.3s ease;\n            border: 2px solid transparent;\n            display: inline-flex;\n            align-items: center;\n            gap: 8px;\n        }\n\n        .btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n        }\n\n        .btn-primary {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            border-color: transparent;\n            color: white;\n        }\n\n        .btn-primary:hover {\n            background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);\n            color: white;\n        }\n\n        .btn-primary:disabled {\n            background: #6c757d;\n            opacity: 0.6;\n            transform: none;\n            box-shadow: none;\n        }\n\n        .btn-outline-secondary {\n            border-color: #6c757d;\n            color: #6c757d;\n            background: transparent;\n        }\n\n        .btn-outline-secondary:hover {\n            background: #6c757d;\n            color: white;\n        }\n\n        .btn-danger {\n            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);\n            border-color: transparent;\n            color: white;\n        }\n\n        .btn-danger:hover {\n            background: linear-gradient(135deg, #c82333 0%, #bd2130 100%);\n            color: white;\n        }\n\n        .spinner-border-sm {\n            width: 1rem;\n            height: 1rem;\n        }\n\n        /* Responsive */\n        @media (max-width: 768px) {\n            .header-content {\n                flex-direction: column;\n                align-items: stretch;\n            }\n\n            .header-actions {\n                justify-content: center;\n            }\n\n            .form-row {\n                flex-direction: column;\n                gap: 0;\n            }\n\n            .form-actions {\n                flex-direction: column;\n                gap: 10px;\n            }\n\n            .btn {\n                width: 100%;\n                justify-content: center;\n            }\n        }\n\n        @media (max-width: 480px) {\n            .page-title {\n                font-size: 2rem;\n            }\n\n            .card-body {\n                padding: 20px;\n            }\n        }\n    `]\n})], UpdateComponent);\nexport { UpdateComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}