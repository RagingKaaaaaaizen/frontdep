{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = (a0, a1, a2, a3) => ({\n  \"badge-success\": a0,\n  \"badge-warning\": a1,\n  \"badge-secondary\": a2,\n  \"badge-danger\": a3\n});\nconst _c1 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction PCComponentsComponent_div_37_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 65);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", item_r3.name, \" (\", (item_r3.category == null ? null : item_r3.category.name) || \"No Category\", \") \");\n  }\n}\nfunction PCComponentsComponent_div_37_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 66);\n    i0.ɵɵtext(1, \" Please select an item \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PCComponentsComponent_div_37_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 67);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.categoryError, \" \");\n  }\n}\nfunction PCComponentsComponent_div_37_div_23_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" | Stock ID: \", ctx_r1.newComponent.stockId, \"\");\n  }\n}\nfunction PCComponentsComponent_div_37_div_23_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 72)(1, \"small\", 73);\n    i0.ɵɵelement(2, \"i\", 53);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_4_0;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate3(\" Stock Price: $\", (tmp_4_0 = ctx_r1.getStockDetails(ctx_r1.newComponent.itemId, ctx_r1.pc == null ? null : ctx_r1.pc.roomLocationId)) == null ? null : tmp_4_0.price, \" | Stock Quantity: \", (tmp_4_0 = ctx_r1.getStockDetails(ctx_r1.newComponent.itemId, ctx_r1.pc == null ? null : ctx_r1.pc.roomLocationId)) == null ? null : tmp_4_0.quantity, \" | Stock ID: \", (tmp_4_0 = ctx_r1.getStockDetails(ctx_r1.newComponent.itemId, ctx_r1.pc == null ? null : ctx_r1.pc.roomLocationId)) == null ? null : tmp_4_0.id, \" \");\n  }\n}\nfunction PCComponentsComponent_div_37_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 68)(1, \"small\", 69);\n    i0.ɵɵelement(2, \"i\", 70);\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, PCComponentsComponent_div_37_div_23_span_4_Template, 2, 1, \"span\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, PCComponentsComponent_div_37_div_23_div_5_Template, 4, 3, \"div\", 71);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Available Stock: \", ctx_r1.getAvailableQuantity(ctx_r1.newComponent.itemId), \" units \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.newComponent.stockId);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getStockDetails(ctx_r1.newComponent.itemId, ctx_r1.pc == null ? null : ctx_r1.pc.roomLocationId));\n  }\n}\nfunction PCComponentsComponent_div_37_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 66);\n    i0.ɵɵtext(1, \" Quantity must be greater than 0 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PCComponentsComponent_div_37_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 66);\n    i0.ɵɵtext(1, \" Price must be greater than 0 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PCComponentsComponent_div_37_span_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 74);\n  }\n}\nfunction PCComponentsComponent_div_37_i_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 75);\n  }\n}\nfunction PCComponentsComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 43)(1, \"div\", 14)(2, \"div\", 15)(3, \"h6\");\n    i0.ɵɵelement(4, \"i\", 13);\n    i0.ɵɵtext(5, \" Add New Component\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 20)(7, \"form\", 44, 0);\n    i0.ɵɵlistener(\"ngSubmit\", function PCComponentsComponent_div_37_Template_form_ngSubmit_7_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.saveComponent());\n    });\n    i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 45)(11, \"label\", 46);\n    i0.ɵɵelement(12, \"i\", 28);\n    i0.ɵɵtext(13, \" Item * \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"select\", 47);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function PCComponentsComponent_div_37_Template_select_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.newComponent.itemId, $event) || (ctx_r1.newComponent.itemId = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"change\", function PCComponentsComponent_div_37_Template_select_change_14_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onItemChange());\n    });\n    i0.ɵɵelementStart(15, \"option\", 48);\n    i0.ɵɵtext(16, \"Select Item\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, PCComponentsComponent_div_37_option_17_Template, 2, 3, \"option\", 49);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, PCComponentsComponent_div_37_div_18_Template, 2, 0, \"div\", 50)(19, PCComponentsComponent_div_37_div_19_Template, 2, 1, \"div\", 51);\n    i0.ɵɵelementStart(20, \"small\", 52);\n    i0.ɵɵelement(21, \"i\", 53);\n    i0.ɵɵtext(22, \" Only items available in stock at this location are shown. One item per category is allowed. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(23, PCComponentsComponent_div_37_div_23_Template, 6, 3, \"div\", 54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 45)(25, \"label\", 46);\n    i0.ɵɵelement(26, \"i\", 30);\n    i0.ɵɵtext(27, \" Quantity * \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"input\", 55);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function PCComponentsComponent_div_37_Template_input_ngModelChange_28_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.newComponent.quantity, $event) || (ctx_r1.newComponent.quantity = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"blur\", function PCComponentsComponent_div_37_Template_input_blur_28_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onQuantityChange());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(29, PCComponentsComponent_div_37_div_29_Template, 2, 0, \"div\", 50);\n    i0.ɵɵelementStart(30, \"small\", 52);\n    i0.ɵɵelement(31, \"i\", 53);\n    i0.ɵɵtext(32, \" Quantity cannot exceed available stock. Price auto-fills from stock when item is selected. \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"div\", 2)(34, \"div\", 45)(35, \"label\", 46);\n    i0.ɵɵelement(36, \"i\", 31);\n    i0.ɵɵtext(37, \" Price (per item) \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"input\", 56);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function PCComponentsComponent_div_37_Template_input_ngModelChange_38_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.newComponent.price, $event) || (ctx_r1.newComponent.price = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"input\", function PCComponentsComponent_div_37_Template_input_input_38_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onPriceInput());\n    })(\"focus\", function PCComponentsComponent_div_37_Template_input_focus_38_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.console.log(\"Price field focused, current value:\", ctx_r1.newComponent.price));\n    })(\"blur\", function PCComponentsComponent_div_37_Template_input_blur_38_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.console.log(\"Price field blurred, final value:\", ctx_r1.newComponent.price));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(39, PCComponentsComponent_div_37_div_39_Template, 2, 0, \"div\", 50);\n    i0.ɵɵelementStart(40, \"small\", 52);\n    i0.ɵɵelement(41, \"i\", 53);\n    i0.ɵɵtext(42, \" Price auto-fills from the most recent stock entry when item is selected. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"div\", 45)(44, \"label\", 46);\n    i0.ɵɵelement(45, \"i\", 57);\n    i0.ɵɵtext(46, \" Total Price \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(47, \"input\", 58);\n    i0.ɵɵelementStart(48, \"small\", 52);\n    i0.ɵɵtext(49, \" Automatically calculated \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(50, \"div\", 59)(51, \"button\", 60);\n    i0.ɵɵlistener(\"click\", function PCComponentsComponent_div_37_Template_button_click_51_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.cancelAdd());\n    });\n    i0.ɵɵelement(52, \"i\", 61);\n    i0.ɵɵtext(53, \" Cancel \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(54, \"button\", 62);\n    i0.ɵɵtemplate(55, PCComponentsComponent_div_37_span_55_Template, 1, 0, \"span\", 63)(56, PCComponentsComponent_div_37_i_56_Template, 1, 0, \"i\", 64);\n    i0.ɵɵtext(57);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const componentForm_r4 = i0.ɵɵreference(8);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.newComponent.itemId);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c1, ctx_r1.submitted && !ctx_r1.newComponent.itemId));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.availableItems);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && !ctx_r1.newComponent.itemId);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.categoryError);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.newComponent.itemId && ctx_r1.getStockData(ctx_r1.newComponent.itemId, ctx_r1.pc == null ? null : ctx_r1.pc.roomLocationId).length > 0);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.newComponent.quantity);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c1, ctx_r1.submitted && (!ctx_r1.newComponent.quantity || ctx_r1.newComponent.quantity <= 0)));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && (!ctx_r1.newComponent.quantity || ctx_r1.newComponent.quantity <= 0));\n    i0.ɵɵadvance(9);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.newComponent.price);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c1, ctx_r1.submitted && (!ctx_r1.newComponent.price || ctx_r1.newComponent.price <= 0)));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && (!ctx_r1.newComponent.price || ctx_r1.newComponent.price <= 0));\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"value\", ctx_r1.newComponent.totalPrice || \"\")(\"disabled\", true);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"disabled\", componentForm_r4.invalid || ctx_r1.loading);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loading);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.loading);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.loading ? \"Adding...\" : \"Add Component\", \" \");\n  }\n}\nfunction PCComponentsComponent_tr_64_small_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 91);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const component_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", component_r6.remarks, \" \");\n  }\n}\nfunction PCComponentsComponent_tr_64_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 76)(1, \"td\")(2, \"div\", 77)(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, PCComponentsComponent_tr_64_small_5_Template, 2, 1, \"small\", 78);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\")(7, \"span\", 79);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\")(10, \"span\", 80);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\")(13, \"span\", 81);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"span\", 82);\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"td\")(20, \"span\", 83);\n    i0.ɵɵtext(21);\n    i0.ɵɵpipe(22, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"td\")(24, \"div\", 84)(25, \"button\", 85);\n    i0.ɵɵlistener(\"click\", function PCComponentsComponent_tr_64_Template_button_click_25_listener() {\n      const component_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.viewComponent(component_r6.id));\n    });\n    i0.ɵɵelement(26, \"i\", 86);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"button\", 87);\n    i0.ɵɵlistener(\"click\", function PCComponentsComponent_tr_64_Template_button_click_27_listener() {\n      const component_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.editComponent(component_r6.id));\n    });\n    i0.ɵɵelement(28, \"i\", 88);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"button\", 89);\n    i0.ɵɵlistener(\"click\", function PCComponentsComponent_tr_64_Template_button_click_29_listener() {\n      const component_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.removeComponent(component_r6.id));\n    });\n    i0.ɵɵelement(30, \"i\", 90);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const component_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.getItemNameFromComponent(component_r6));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", component_r6.remarks);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getCategoryName(component_r6), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getBrandName(component_r6), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", component_r6.quantity, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" $\", i0.ɵɵpipeBind2(18, 7, component_r6.price, \"1.2-2\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(22, 10, component_r6.createdAt, \"short\"), \" \");\n  }\n}\nfunction PCComponentsComponent_tr_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 92)(2, \"div\", 93);\n    i0.ɵɵelement(3, \"i\", 16);\n    i0.ɵɵelementStart(4, \"h4\");\n    i0.ɵɵtext(5, \"No components found\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7, \"This PC doesn't have any components yet. Click \\\"Add Component\\\" to get started.\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nexport let PCComponentsComponent = /*#__PURE__*/(() => {\n  class PCComponentsComponent {\n    constructor(route, router, pcService, pcComponentService, stockService, itemService, categoryService, brandService, alertService) {\n      this.route = route;\n      this.router = router;\n      this.pcService = pcService;\n      this.pcComponentService = pcComponentService;\n      this.stockService = stockService;\n      this.itemService = itemService;\n      this.categoryService = categoryService;\n      this.brandService = brandService;\n      this.alertService = alertService;\n      this.pc = null;\n      this.components = [];\n      this.items = [];\n      this.categories = [];\n      this.brands = [];\n      this.allStocks = [];\n      // Add component form properties\n      this.showAddForm = false;\n      this.newComponent = {\n        itemId: null,\n        stockId: null,\n        // Add stockId to track which stock entry is being used\n        quantity: 1,\n        price: null,\n        totalPrice: null\n      };\n      this.availableItems = [];\n      this.existingPCComponents = [];\n      this.categoryError = '';\n      this.submitted = false;\n      this.loading = false;\n    }\n    ngOnInit() {\n      const pcId = this.route.snapshot.params['id'];\n      this.loadPC(pcId);\n      this.loadData();\n    }\n    loadData() {\n      this.loadItems();\n      this.loadCategories();\n      this.loadBrands();\n      this.loadStocksForFiltering();\n    }\n    loadStocksForFiltering() {\n      this.stockService.getAll().pipe(first()).subscribe({\n        next: stocks => {\n          this.allStocks = stocks;\n          console.log('Loaded stocks for filtering:', stocks.length);\n          // Debug stock data structure\n          if (stocks.length > 0) {\n            const sampleStock = stocks[0];\n            console.log('Sample stock structure:', {\n              id: sampleStock.id,\n              itemId: sampleStock.itemId,\n              locationId: sampleStock.locationId,\n              quantity: sampleStock.quantity,\n              price: sampleStock.price,\n              totalPrice: sampleStock.totalPrice,\n              remarks: sampleStock.remarks,\n              createdAt: sampleStock.createdAt,\n              item: sampleStock.item,\n              location: sampleStock.location\n            });\n          }\n          // Filter available items after stocks are loaded\n          if (this.pc && this.pc.roomLocationId) {\n            this.filterAvailableItems();\n          }\n        },\n        error: error => {\n          this.alertService.error('Error loading stocks: ' + error);\n          console.error('Error loading stocks:', error);\n        }\n      });\n    }\n    filterAvailableItems() {\n      if (!this.pc || !this.pc.roomLocationId) {\n        console.log('No PC or location found, cannot filter available items');\n        return;\n      }\n      console.log('Filtering available items for PC location:', this.pc.roomLocationId);\n      // Get all stock entries for the PC's location\n      const locationStocks = this.allStocks.filter(stock => stock.locationId === this.pc.roomLocationId);\n      console.log('Location stocks (excluding PC components):', locationStocks.length);\n      // Group by item and calculate available quantities\n      const itemAvailability = new Map();\n      locationStocks.forEach(stock => {\n        const itemId = stock.itemId;\n        if (!itemAvailability.has(itemId)) {\n          itemAvailability.set(itemId, 0);\n        }\n        // Only count positive quantities\n        if (stock.quantity > 0) {\n          itemAvailability.set(itemId, itemAvailability.get(itemId) + stock.quantity);\n        }\n      });\n      console.log('Item availability map:', itemAvailability);\n      // Filter items that have stock available\n      this.availableItems = this.items.filter(item => {\n        const availableQty = itemAvailability.get(item.id) || 0;\n        const hasStock = availableQty > 0;\n        console.log(`Item ${item.name} (ID: ${item.id}): ${availableQty} available`);\n        return hasStock;\n      });\n      console.log('Available items for PC component:', this.availableItems.length);\n    }\n    loadExistingPCComponents() {\n      if (!this.pc) return;\n      // Get existing components for this PC from the PC Components table\n      this.pcComponentService.getByPCId(this.pc.id).pipe(first()).subscribe({\n        next: components => {\n          this.existingPCComponents = components;\n          console.log('Existing PC components:', this.existingPCComponents);\n        },\n        error: error => {\n          console.error('Error loading existing PC components:', error);\n          this.existingPCComponents = [];\n        }\n      });\n    }\n    onItemChange() {\n      console.log('Item changed to:', this.newComponent.itemId);\n      if (this.newComponent.itemId) {\n        // Reset price, total price, and stock ID when item changes\n        this.newComponent.price = null;\n        this.newComponent.totalPrice = null;\n        this.newComponent.stockId = null;\n        // Validate category first\n        this.validateCategory();\n        // Load price from stock immediately when item is selected\n        console.log('Loading price immediately for item:', this.newComponent.itemId);\n        this.loadPriceFromStock();\n      } else {\n        // Reset price, total price, and stock ID when no item is selected\n        this.newComponent.price = null;\n        this.newComponent.totalPrice = null;\n        this.newComponent.stockId = null;\n      }\n    }\n    onPriceInput() {\n      // Recalculate total price when price changes\n      this.calculateTotalPrice();\n    }\n    onQuantityChange() {\n      console.log('onQuantityChange called - current quantity:', this.newComponent.quantity);\n      // Don't validate if quantity is empty or null\n      if (!this.newComponent.quantity || this.newComponent.quantity === null) {\n        console.log('Quantity is empty, skipping validation');\n        return;\n      }\n      // Convert to number and validate\n      const quantity = Number(this.newComponent.quantity);\n      // Only validate if we have a valid item selected\n      if (this.newComponent.itemId && quantity > 0) {\n        // Check if quantity exceeds available stock\n        const availableQuantity = this.getAvailableQuantity(this.newComponent.itemId);\n        console.log('Available quantity:', availableQuantity, 'Requested quantity:', quantity);\n        if (availableQuantity === 0) {\n          console.log('No stock available for this item at this location');\n          this.alertService.error('No stock available for this item at this location.');\n          this.newComponent.quantity = 1; // Reset to 1 instead of empty\n          return;\n        }\n        if (quantity > availableQuantity) {\n          this.alertService.error(`Only ${availableQuantity} units are available in stock.`);\n          this.newComponent.quantity = availableQuantity; // Reset to max available\n          console.log('Quantity reset to:', this.newComponent.quantity);\n          this.calculateTotalPrice(); // Recalculate after reset\n          return;\n        }\n        // Recalculate total price when quantity changes\n        this.calculateTotalPrice();\n      }\n    }\n    getAvailableQuantity(itemId) {\n      if (!this.pc || !this.pc.roomLocationId) {\n        console.log('No PC or location found');\n        return 0;\n      }\n      console.log('Getting available quantity for item:', itemId, 'at PC location:', this.pc.roomLocationId);\n      // Get all stock entries for this item at the PC's location\n      const availableStocks = this.allStocks.filter(stock => stock.itemId === itemId && stock.locationId === this.pc.roomLocationId);\n      console.log('Available stocks for item', itemId, 'at location', this.pc.roomLocationId, ':', availableStocks);\n      // Calculate total available quantity\n      const totalAvailable = availableStocks.reduce((total, stock) => {\n        // Only count positive quantities\n        return total + (stock.quantity > 0 ? stock.quantity : 0);\n      }, 0);\n      console.log('Total available quantity:', totalAvailable);\n      return totalAvailable;\n    }\n    loadPriceFromStock() {\n      if (!this.newComponent.itemId) {\n        console.log('No item selected, skipping price loading');\n        return;\n      }\n      if (!this.pc || !this.pc.roomLocationId) {\n        console.log('No PC or location found, skipping price loading');\n        return;\n      }\n      console.log('Loading price for item:', this.newComponent.itemId, 'at location:', this.pc.roomLocationId);\n      console.log('All stocks available:', this.allStocks.length);\n      // Find all stock entries for this item at the PC's location\n      const stockEntries = this.allStocks.filter(stock => stock.itemId === this.newComponent.itemId && stock.locationId === this.pc.roomLocationId);\n      console.log('Found stock entries for price loading:', stockEntries.length);\n      console.log('Stock entries details:', stockEntries.map(s => ({\n        id: s.id,\n        itemId: s.itemId,\n        locationId: s.locationId,\n        quantity: s.quantity,\n        price: s.price,\n        remarks: s.remarks\n      })));\n      if (stockEntries.length > 0) {\n        // Sort by creation date (most recent first)\n        stockEntries.sort((a, b) => {\n          const dateA = new Date(a.createdAt || 0);\n          const dateB = new Date(b.createdAt || 0);\n          return dateB.getTime() - dateA.getTime(); // Most recent first\n        });\n        // Use the most recent stock entry's price and store its ID\n        const mostRecentStock = stockEntries[0];\n        this.newComponent.price = mostRecentStock.price;\n        this.newComponent.stockId = mostRecentStock.id; // Store the stock ID\n        console.log('Price auto-filled from stock entry:', {\n          stockId: mostRecentStock.id,\n          stockQuantity: mostRecentStock.quantity,\n          stockPrice: mostRecentStock.price,\n          priceUsed: mostRecentStock.price,\n          itemId: this.newComponent.itemId,\n          locationId: this.pc.roomLocationId\n        });\n        // Calculate total price if quantity is set\n        if (this.newComponent.quantity && this.newComponent.quantity > 0) {\n          this.calculateTotalPrice();\n        }\n      } else {\n        console.log('No stock entries found for price loading');\n        console.log('Available stocks for this item:', this.allStocks.filter(stock => stock.itemId === this.newComponent.itemId));\n        this.newComponent.price = null;\n        this.newComponent.totalPrice = null;\n        this.newComponent.stockId = null;\n      }\n    }\n    // Add method to get stock by ID\n    getStockById(stockId) {\n      return this.allStocks.find(stock => stock.id === stockId);\n    }\n    // Add method to get stock data for display\n    getStockData(itemId, locationId) {\n      return this.allStocks.filter(stock => stock.itemId === itemId && stock.locationId === locationId);\n    }\n    // Add method to get stock details for display\n    getStockDetails(itemId, locationId) {\n      const stocks = this.getStockData(itemId, locationId);\n      if (stocks.length > 0) {\n        // Sort by creation date (most recent first)\n        stocks.sort((a, b) => {\n          const dateA = new Date(a.createdAt || 0);\n          const dateB = new Date(b.createdAt || 0);\n          return dateB.getTime() - dateA.getTime();\n        });\n        return stocks[0]; // Return most recent stock entry\n      }\n      return null;\n    }\n    validateCategory() {\n      if (!this.newComponent.itemId) return;\n      const selectedItem = this.items.find(item => item.id === this.newComponent.itemId);\n      if (!selectedItem) return;\n      const selectedCategoryId = selectedItem.categoryId;\n      // Check if this category is already used in existing components\n      const categoryAlreadyUsed = this.existingPCComponents.some(component => {\n        // Check if component has item data directly\n        if (component.item && component.item.categoryId) {\n          return component.item.categoryId === selectedCategoryId;\n        }\n        // Fallback to checking items array\n        const componentItem = this.items.find(item => item.id === component.itemId);\n        return componentItem && componentItem.categoryId === selectedCategoryId;\n      });\n      if (categoryAlreadyUsed) {\n        this.categoryError = `Category \"${selectedItem.category?.name || 'Unknown'}\" is already used in this PC. Only one item per category is allowed.`;\n        this.newComponent.itemId = null; // Reset selection\n      } else {\n        this.categoryError = '';\n      }\n    }\n    calculateTotalPrice() {\n      const price = this.newComponent.price;\n      const qty = this.newComponent.quantity;\n      console.log('Calculating total price:', {\n        price,\n        qty\n      });\n      // Ensure both values are numbers and valid\n      const numPrice = Number(price);\n      const numQty = Number(qty);\n      if (numPrice > 0 && numQty > 0) {\n        this.newComponent.totalPrice = numPrice * numQty;\n        console.log('Total price calculated:', this.newComponent.totalPrice);\n      } else {\n        this.newComponent.totalPrice = null;\n        console.log('Invalid price or quantity, total price set to null');\n      }\n    }\n    loadPC(pcId) {\n      this.pcService.getById(pcId).pipe(first()).subscribe({\n        next: pc => {\n          this.pc = pc;\n          console.log('PC loaded:', pc);\n          console.log('PC location ID:', pc.roomLocationId);\n          // Load components and other data after PC is loaded\n          this.loadComponents(pcId);\n          this.loadExistingPCComponents();\n          this.filterAvailableItems();\n        },\n        error: error => {\n          this.alertService.error('Error loading PC: ' + error);\n          console.error('Error loading PC:', error);\n        }\n      });\n    }\n    loadComponents(pcId) {\n      this.pcComponentService.getByPCId(pcId).pipe(first()).subscribe({\n        next: components => {\n          this.components = components;\n          console.log('Loaded components for PC:', this.components.length);\n        },\n        error: error => {\n          this.alertService.error('Error loading components: ' + error);\n          console.error('Error loading components:', error);\n        }\n      });\n    }\n    loadItems() {\n      this.itemService.getAll().pipe(first()).subscribe({\n        next: items => {\n          this.items = items;\n        },\n        error: error => {\n          this.alertService.error('Error loading items: ' + error);\n        }\n      });\n    }\n    loadCategories() {\n      this.categoryService.getAll().pipe(first()).subscribe({\n        next: categories => {\n          this.categories = categories;\n        },\n        error: error => {\n          this.alertService.error('Error loading categories: ' + error);\n        }\n      });\n    }\n    loadBrands() {\n      this.brandService.getAll().pipe(first()).subscribe({\n        next: brands => {\n          this.brands = brands;\n        },\n        error: error => {\n          this.alertService.error('Error loading brands: ' + error);\n        }\n      });\n    }\n    refreshData() {\n      this.loadComponents(this.pc.id);\n      this.alertService.success('Data refreshed successfully');\n    }\n    getItemName(itemId) {\n      const item = this.items.find(i => i.id === itemId);\n      return item ? item.name : 'Unknown Item';\n    }\n    getItemNameFromComponent(component) {\n      if (component.item) {\n        return component.item.name;\n      }\n      return this.getItemName(component.itemId);\n    }\n    getCategoryName(component) {\n      // Check if component has item data directly\n      if (component.item && component.item.category) {\n        return component.item.category.name;\n      }\n      const item = this.items.find(i => i.id === component.itemId);\n      if (!item) return 'Unknown';\n      const category = this.categories.find(c => c.id === item.categoryId);\n      return category ? category.name : 'Unknown Category';\n    }\n    getBrandName(component) {\n      // Check if component has item data directly\n      if (component.item && component.item.brand) {\n        return component.item.brand.name;\n      }\n      const item = this.items.find(i => i.id === component.itemId);\n      if (!item) return 'Unknown';\n      const brand = this.brands.find(b => b.id === item.brandId);\n      return brand ? brand.name : 'Unknown Brand';\n    }\n    getTotalValue() {\n      return this.components.reduce((total, component) => {\n        return total + component.price * component.quantity;\n      }, 0);\n    }\n    getUniqueCategories() {\n      const categoryIds = this.components.map(component => {\n        // Check if component has item data directly\n        if (component.item && component.item.categoryId) {\n          return component.item.categoryId;\n        }\n        // Fallback to checking items array\n        const item = this.items.find(i => i.id === component.itemId);\n        return item ? item.categoryId : null;\n      }).filter(id => id !== null);\n      return [...new Set(categoryIds)].length;\n    }\n    getTotalQuantity() {\n      return this.components.reduce((total, component) => {\n        return total + component.quantity;\n      }, 0);\n    }\n    addComponent() {\n      this.showAddForm = true;\n      this.resetNewComponent();\n      this.loadExistingPCComponents();\n      this.filterAvailableItems(); // Refresh available items\n      // Ensure quantity is properly set to 1\n      setTimeout(() => {\n        this.newComponent.quantity = 1;\n        console.log('Add component - quantity set to:', this.newComponent.quantity);\n      }, 50);\n      console.log('Add component - newComponent initialized:', this.newComponent);\n    }\n    cancelAdd() {\n      this.showAddForm = false;\n      this.resetNewComponent();\n      this.categoryError = '';\n      this.submitted = false;\n      console.log('Form cancelled, newComponent reset');\n    }\n    resetNewComponent() {\n      this.newComponent = {\n        itemId: null,\n        stockId: null,\n        quantity: 1,\n        price: null,\n        totalPrice: null\n      };\n      console.log('Reset newComponent - quantity set to:', this.newComponent.quantity);\n    }\n    saveComponent() {\n      this.submitted = true;\n      console.log('Saving component with data:', this.newComponent);\n      // Validate required fields\n      if (!this.newComponent.itemId) {\n        this.alertService.error('Please select an item');\n        return;\n      }\n      if (!this.newComponent.quantity || this.newComponent.quantity <= 0) {\n        this.alertService.error('Quantity must be greater than 0');\n        return;\n      }\n      if (!this.newComponent.price || this.newComponent.price <= 0) {\n        this.alertService.error('Price must be greater than 0');\n        return;\n      }\n      // Additional validation for PC components\n      if (this.categoryError) {\n        this.alertService.error(this.categoryError);\n        return;\n      }\n      // Final stock validation - check if quantity exceeds available stock\n      const availableQuantity = this.getAvailableQuantity(this.newComponent.itemId);\n      if (this.newComponent.quantity > availableQuantity) {\n        this.alertService.error(`Only ${availableQuantity} units are available in stock.`);\n        return;\n      }\n      // Auto-calculate total price before saving\n      this.calculateTotalPrice();\n      // Validate total price\n      if (!this.newComponent.totalPrice || this.newComponent.totalPrice <= 0) {\n        this.alertService.error('Total price calculation failed. Please check price and quantity.');\n        return;\n      }\n      this.loading = true;\n      // Create PC component entry\n      const componentData = {\n        pcId: this.pc.id,\n        itemId: this.newComponent.itemId,\n        quantity: this.newComponent.quantity,\n        price: this.newComponent.price,\n        totalPrice: this.newComponent.totalPrice,\n        stockId: this.newComponent.stockId,\n        remarks: this.newComponent.remarks || ''\n      };\n      console.log('Creating PC component with data:', componentData);\n      this.pcComponentService.create(componentData).pipe(first()).subscribe({\n        next: result => {\n          this.loading = false;\n          this.alertService.success('Component added successfully');\n          this.showAddForm = false;\n          this.resetNewComponent();\n          this.categoryError = '';\n          this.submitted = false;\n          this.loadComponents(this.pc.id);\n        },\n        error: error => {\n          this.loading = false;\n          this.alertService.error('Error adding component: ' + error);\n          console.error('Error adding component:', error);\n        }\n      });\n    }\n    viewComponent(id) {\n      this.router.navigate(['/stocks', id]);\n    }\n    editComponent(id) {\n      this.router.navigate(['/stocks', id, 'edit']);\n    }\n    removeComponent(id) {\n      if (confirm('Are you sure you want to remove this component from the PC?')) {\n        this.pcComponentService.delete(id).pipe(first()).subscribe({\n          next: () => {\n            this.alertService.success('Component removed successfully');\n            this.loadComponents(this.pc.id);\n          },\n          error: error => {\n            this.alertService.error('Error removing component: ' + error);\n          }\n        });\n      }\n    }\n    static #_ = this.ɵfac = function PCComponentsComponent_Factory(t) {\n      return new (t || PCComponentsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PCService), i0.ɵɵdirectiveInject(i2.PCComponentService), i0.ɵɵdirectiveInject(i2.StockService), i0.ɵɵdirectiveInject(i2.ItemService), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i2.BrandService), i0.ɵɵdirectiveInject(i2.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PCComponentsComponent,\n      selectors: [[\"app-pc-components\"]],\n      decls: 100,\n      vars: 22,\n      consts: [[\"componentForm\", \"ngForm\"], [1, \"container\"], [1, \"row\"], [1, \"col-12\"], [1, \"pc-header\", \"mb-4\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"fas\", \"fa-desktop\"], [1, \"text-muted\", \"mb-0\"], [1, \"fas\", \"fa-barcode\"], [1, \"badge\", 3, \"ngClass\"], [\"routerLink\", \"/pc\", 1, \"btn\", \"btn-secondary\"], [1, \"fas\", \"fa-arrow-left\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"ml-2\", 3, \"click\"], [1, \"fas\", \"fa-plus\"], [1, \"card\"], [1, \"card-header\"], [1, \"fas\", \"fa-microchip\"], [1, \"header-actions\"], [1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", 3, \"click\"], [1, \"fas\", \"fa-sync-alt\"], [1, \"card-body\"], [1, \"mb-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"text-muted\", \"ms-2\"], [\"class\", \"add-component-form mb-4\", 4, \"ngIf\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [1, \"fas\", \"fa-box\"], [1, \"fas\", \"fa-tag\"], [1, \"fas\", \"fa-trademark\"], [1, \"fas\", \"fa-sort-numeric-up\"], [1, \"fas\", \"fa-dollar-sign\"], [1, \"fas\", \"fa-calendar\"], [1, \"fas\", \"fa-cogs\"], [\"class\", \"component-row\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"row\", \"mt-4\"], [1, \"col-md-3\"], [1, \"stat-card\"], [1, \"stat-icon\"], [1, \"stat-number\"], [1, \"stat-label\"], [1, \"fas\", \"fa-tags\"], [1, \"add-component-form\", \"mb-4\"], [3, \"ngSubmit\"], [1, \"form-group\", \"col-md-6\"], [1, \"form-label\"], [\"name\", \"itemId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"change\", \"ngModel\", \"ngClass\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [1, \"form-text\", \"text-muted\"], [1, \"fas\", \"fa-info-circle\"], [\"class\", \"mt-2\", 4, \"ngIf\"], [\"type\", \"number\", \"name\", \"quantity\", \"required\", \"\", \"min\", \"1\", \"placeholder\", \"Enter quantity\", 1, \"form-control\", 3, \"ngModelChange\", \"blur\", \"ngModel\", \"ngClass\"], [\"type\", \"number\", \"name\", \"price\", \"step\", \"0.01\", \"required\", \"\", \"placeholder\", \"Enter price\", 1, \"form-control\", 3, \"ngModelChange\", \"input\", \"focus\", \"blur\", \"ngModel\", \"ngClass\"], [1, \"fas\", \"fa-calculator\"], [\"type\", \"number\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\", \"disabled\"], [1, \"form-actions\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"fas\", \"fa-times\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", 4, \"ngIf\"], [\"class\", \"fas fa-save me-2\", 4, \"ngIf\"], [3, \"value\"], [1, \"invalid-feedback\"], [1, \"invalid-feedback\", \"d-block\"], [1, \"mt-2\"], [1, \"text-info\"], [1, \"fas\", \"fa-database\"], [\"class\", \"mt-1\", 4, \"ngIf\"], [1, \"mt-1\"], [1, \"text-muted\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"], [1, \"fas\", \"fa-save\", \"me-2\"], [1, \"component-row\"], [1, \"item-info\"], [\"class\", \"d-block text-muted\", 4, \"ngIf\"], [1, \"category-badge\"], [1, \"brand-badge\"], [1, \"quantity-badge\"], [1, \"price-value\"], [1, \"date-value\"], [1, \"action-buttons\"], [\"type\", \"button\", \"title\", \"View Details\", 1, \"btn\", \"btn-sm\", \"btn-outline-primary\", 3, \"click\"], [1, \"fas\", \"fa-eye\"], [\"type\", \"button\", \"title\", \"Edit Component\", 1, \"btn\", \"btn-sm\", \"btn-outline-warning\", 3, \"click\"], [1, \"fas\", \"fa-edit\"], [\"type\", \"button\", \"title\", \"Remove Component\", 1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"], [1, \"fas\", \"fa-trash\"], [1, \"d-block\", \"text-muted\"], [\"colspan\", \"7\", 1, \"text-center\", \"py-4\"], [1, \"empty-state\"]],\n      template: function PCComponentsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"div\")(6, \"h2\");\n          i0.ɵɵelement(7, \"i\", 6);\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p\", 7);\n          i0.ɵɵelement(10, \"i\", 8);\n          i0.ɵɵtext(11);\n          i0.ɵɵelementStart(12, \"span\", 9);\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"div\")(15, \"a\", 10);\n          i0.ɵɵelement(16, \"i\", 11);\n          i0.ɵɵtext(17, \" Back to PCs \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function PCComponentsComponent_Template_button_click_18_listener() {\n            return ctx.addComponent();\n          });\n          i0.ɵɵelement(19, \"i\", 13);\n          i0.ɵɵtext(20, \" Add Component \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(21, \"div\", 14)(22, \"div\", 15)(23, \"h5\");\n          i0.ɵɵelement(24, \"i\", 16);\n          i0.ɵɵtext(25, \" PC Components\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 17)(27, \"button\", 18);\n          i0.ɵɵlistener(\"click\", function PCComponentsComponent_Template_button_click_27_listener() {\n            return ctx.refreshData();\n          });\n          i0.ɵɵelement(28, \"i\", 19);\n          i0.ɵɵtext(29, \" Refresh \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(30, \"div\", 20)(31, \"div\", 21)(32, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function PCComponentsComponent_Template_button_click_32_listener() {\n            return ctx.addComponent();\n          });\n          i0.ɵɵelement(33, \"i\", 13);\n          i0.ɵɵtext(34, \" Add Component \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"small\", 23);\n          i0.ɵɵtext(36);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(37, PCComponentsComponent_div_37_Template, 58, 24, \"div\", 24);\n          i0.ɵɵelementStart(38, \"div\", 25)(39, \"table\", 26)(40, \"thead\")(41, \"tr\")(42, \"th\");\n          i0.ɵɵelement(43, \"i\", 27);\n          i0.ɵɵtext(44, \" Item\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"th\");\n          i0.ɵɵelement(46, \"i\", 28);\n          i0.ɵɵtext(47, \" Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"th\");\n          i0.ɵɵelement(49, \"i\", 29);\n          i0.ɵɵtext(50, \" Brand\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(51, \"th\");\n          i0.ɵɵelement(52, \"i\", 30);\n          i0.ɵɵtext(53, \" Quantity\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"th\");\n          i0.ɵɵelement(55, \"i\", 31);\n          i0.ɵɵtext(56, \" Price\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(57, \"th\");\n          i0.ɵɵelement(58, \"i\", 32);\n          i0.ɵɵtext(59, \" Added Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(60, \"th\");\n          i0.ɵɵelement(61, \"i\", 33);\n          i0.ɵɵtext(62, \" Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(63, \"tbody\");\n          i0.ɵɵtemplate(64, PCComponentsComponent_tr_64_Template, 31, 13, \"tr\", 34)(65, PCComponentsComponent_tr_65_Template, 8, 0, \"tr\", 35);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(66, \"div\", 36)(67, \"div\", 37)(68, \"div\", 38)(69, \"div\", 39);\n          i0.ɵɵelement(70, \"i\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(71, \"div\", 40);\n          i0.ɵɵtext(72);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(73, \"div\", 41);\n          i0.ɵɵtext(74, \"Total Components\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(75, \"div\", 37)(76, \"div\", 38)(77, \"div\", 39);\n          i0.ɵɵelement(78, \"i\", 31);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(79, \"div\", 40);\n          i0.ɵɵtext(80);\n          i0.ɵɵpipe(81, \"number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(82, \"div\", 41);\n          i0.ɵɵtext(83, \"Total Value\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(84, \"div\", 37)(85, \"div\", 38)(86, \"div\", 39);\n          i0.ɵɵelement(87, \"i\", 42);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(88, \"div\", 40);\n          i0.ɵɵtext(89);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(90, \"div\", 41);\n          i0.ɵɵtext(91, \"Categories\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(92, \"div\", 37)(93, \"div\", 38)(94, \"div\", 39);\n          i0.ɵɵelement(95, \"i\", 30);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(96, \"div\", 40);\n          i0.ɵɵtext(97);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(98, \"div\", 41);\n          i0.ɵɵtext(99, \"Total Items\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate1(\" \", ctx.pc == null ? null : ctx.pc.name, \"\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", (ctx.pc == null ? null : ctx.pc.serialNumber) || \"No Serial\", \" | \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(17, _c0, (ctx.pc == null ? null : ctx.pc.status) === \"Active\", (ctx.pc == null ? null : ctx.pc.status) === \"Maintenance\", (ctx.pc == null ? null : ctx.pc.status) === \"Inactive\", (ctx.pc == null ? null : ctx.pc.status) === \"Retired\"));\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate(ctx.pc == null ? null : ctx.pc.status);\n          i0.ɵɵadvance(23);\n          i0.ɵɵtextInterpolate3(\" Available items: \", ctx.availableItems.length, \" | Total stocks: \", ctx.allStocks.length, \" | PC Location: \", ctx.pc == null ? null : ctx.pc.roomLocationId, \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showAddForm);\n          i0.ɵɵadvance(27);\n          i0.ɵɵproperty(\"ngForOf\", ctx.components);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.components.length === 0);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.components.length);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate1(\"$\", i0.ɵɵpipeBind2(81, 14, ctx.getTotalValue(), \"1.0-0\"), \"\");\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.getUniqueCategories());\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.getTotalQuantity());\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinValidator, i4.NgModel, i4.NgForm, i1.RouterLink, i3.DecimalPipe, i3.DatePipe],\n      styles: [\".pc-header[_ngcontent-%COMP%]{background:#fff;border-radius:12px;padding:20px;box-shadow:0 2px 10px #0000001a}.card[_ngcontent-%COMP%]{border:none;border-radius:12px;box-shadow:0 2px 10px #0000001a;margin-bottom:20px}.card-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);color:#fff;border-radius:12px 12px 0 0!important;padding:20px;font-weight:600;display:flex;justify-content:space-between;align-items:center}.component-row[_ngcontent-%COMP%]{transition:all .3s ease}.component-row[_ngcontent-%COMP%]:hover{background-color:#f8f9fa;transform:scale(1.01)}.item-info[_ngcontent-%COMP%]{display:flex;flex-direction:column}.category-badge[_ngcontent-%COMP%], .brand-badge[_ngcontent-%COMP%]{display:inline-block;padding:4px 8px;border-radius:12px;font-size:.8rem;font-weight:500;background:#667eea1a;color:#667eea}.quantity-badge[_ngcontent-%COMP%]{padding:6px 12px;border-radius:20px;font-size:.9rem;font-weight:600;background:#28a7451a;color:#28a745}.price-value[_ngcontent-%COMP%]{font-weight:600;color:#333}.date-value[_ngcontent-%COMP%]{font-size:.9rem;color:#666}.action-buttons[_ngcontent-%COMP%]{display:flex;gap:5px;flex-wrap:wrap}.action-buttons[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{padding:6px 10px;font-size:.8rem}.empty-state[_ngcontent-%COMP%]{text-align:center;padding:40px;color:#666}.empty-state[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:4rem;color:#ddd;margin-bottom:20px}.empty-state[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{color:#333;margin-bottom:10px}.stat-card[_ngcontent-%COMP%]{background:#fff;border-radius:12px;padding:25px;box-shadow:0 2px 10px #0000001a;transition:all .3s ease;text-align:center}.stat-card[_ngcontent-%COMP%]:hover{transform:translateY(-5px);box-shadow:0 8px 25px #00000026}.stat-icon[_ngcontent-%COMP%]{font-size:3rem;margin-bottom:15px;background:linear-gradient(135deg,#667eea,#764ba2);-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text}.stat-number[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:700;color:#333;margin-bottom:5px}.stat-label[_ngcontent-%COMP%]{color:#666;font-size:1rem}\"]\n    });\n  }\n  return PCComponentsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}