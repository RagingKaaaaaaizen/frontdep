{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { Role } from '../../_models';\nlet ItemListComponent = class ItemListComponent {\n  constructor(itemService, categoryService, brandService, alertService, accountService, router) {\n    this.itemService = itemService;\n    this.categoryService = categoryService;\n    this.brandService = brandService;\n    this.alertService = alertService;\n    this.accountService = accountService;\n    this.router = router;\n    this.Role = Role;\n    this.items = [];\n    this.filteredItems = [];\n    this.categories = [];\n    this.brands = [];\n    this.loading = false;\n    this.searchTerm = '';\n    this.selectedCategory = '';\n    this.selectedBrand = '';\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n    this.Math = Math;\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n    this.loadItems();\n    this.loadCategories();\n    this.loadBrands();\n  }\n  loadItems() {\n    this.loading = true;\n    this.itemService.getAll().pipe(first()).subscribe({\n      next: items => {\n        this.items = items;\n        this.applyFilters();\n        this.loading = false;\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.loading = false;\n      }\n    });\n  }\n  loadCategories() {\n    this.categoryService.getAll().pipe(first()).subscribe({\n      next: categories => {\n        this.categories = categories;\n      },\n      error: error => {\n        this.alertService.error(error);\n      }\n    });\n  }\n  loadBrands() {\n    this.brandService.getAll().pipe(first()).subscribe({\n      next: brands => {\n        this.brands = brands;\n      },\n      error: error => {\n        this.alertService.error(error);\n      }\n    });\n  }\n  applyFilters() {\n    let filtered = [...this.items];\n    // Search filter\n    if (this.searchTerm) {\n      filtered = filtered.filter(item => {\n        const name = (item.name || '').toLowerCase();\n        const description = (item.description || '').toLowerCase();\n        return name.includes(this.searchTerm.toLowerCase()) || description.includes(this.searchTerm.toLowerCase());\n      });\n    }\n    // Category filter\n    if (this.selectedCategory) {\n      filtered = filtered.filter(item => {\n        const categoryName = this.getCategoryName(item) || '';\n        return categoryName.toLowerCase().includes(this.selectedCategory.toLowerCase());\n      });\n    }\n    // Brand filter\n    if (this.selectedBrand) {\n      filtered = filtered.filter(item => {\n        const brandName = this.getBrandName(item) || '';\n        return brandName.toLowerCase().includes(this.selectedBrand.toLowerCase());\n      });\n    }\n    this.filteredItems = filtered;\n    this.currentPage = 1;\n  }\n  onSearch() {\n    this.applyFilters();\n  }\n  onFilterChange() {\n    this.applyFilters();\n  }\n  refreshData() {\n    this.loadData();\n    this.alertService.success('Data refreshed successfully');\n  }\n  // Helper methods to get category and brand names\n  getCategoryName(item) {\n    return item.category?.name || item.categoryName || 'No Category';\n  }\n  getBrandName(item) {\n    return item.brand?.name || item.brandName || 'No Brand';\n  }\n  getUniqueCategories() {\n    const categories = new Set(this.items.map(item => this.getCategoryName(item)).filter(name => name !== 'No Category'));\n    return categories.size;\n  }\n  getUniqueBrands() {\n    const brands = new Set(this.items.map(item => this.getBrandName(item)).filter(name => name !== 'No Brand'));\n    return brands.size;\n  }\n  getActiveItems() {\n    return this.items.length; // Assuming all items are active for now\n  }\n  hasRole(roles) {\n    const account = this.accountService.accountValue;\n    if (!account) return false;\n    return roles.some(role => role === account.role);\n  }\n  viewItem(id) {\n    this.router.navigate(['/add/item/view', id]);\n  }\n  deleteItem(id) {\n    if (confirm('Are you sure you want to delete this item?')) {\n      this.itemService.delete(id).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Item deleted successfully');\n          this.loadItems();\n        },\n        error: error => {\n          this.alertService.error('Error deleting item');\n        }\n      });\n    }\n  }\n  // Pagination methods\n  get totalPages() {\n    return Math.ceil(this.filteredItems.length / this.itemsPerPage);\n  }\n  get paginatedItems() {\n    const start = (this.currentPage - 1) * this.itemsPerPage;\n    const end = start + this.itemsPerPage;\n    return this.filteredItems.slice(start, end);\n  }\n  getPageNumbers() {\n    const pages = [];\n    const maxPages = Math.min(5, this.totalPages);\n    const start = Math.max(1, this.currentPage - Math.floor(maxPages / 2));\n    const end = Math.min(this.totalPages, start + maxPages - 1);\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }\n  goToPage(page) {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage = page;\n    }\n  }\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n    }\n  }\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n    }\n  }\n};\nItemListComponent = __decorate([Component({\n  selector: 'app-item-list',\n  templateUrl: './item-list.component.html',\n  styles: [`\n    .list-container {\n      padding: 20px 0;\n    }\n\n    .page-header {\n      background: white;\n      border-radius: 12px;\n      padding: 30px;\n      margin-bottom: 30px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n    }\n\n    .header-content {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      flex-wrap: wrap;\n      gap: 20px;\n    }\n\n    .header-title {\n      display: flex;\n      align-items: center;\n      gap: 15px;\n    }\n\n    .header-title i {\n      font-size: 2.5rem;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n    }\n\n    .page-title {\n      font-size: 2.5rem;\n      font-weight: bold;\n      color: #333;\n      margin: 0 0 5px 0;\n    }\n\n    .page-subtitle {\n      color: #666;\n      font-size: 1.1rem;\n      margin: 0;\n    }\n\n    .header-actions {\n      display: flex;\n      gap: 10px;\n      flex-wrap: wrap;\n    }\n\n    .stats-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 20px;\n      margin-bottom: 30px;\n    }\n\n    .stat-card {\n      background: white;\n      border-radius: 12px;\n      padding: 25px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n      transition: all 0.3s ease;\n      text-align: center;\n    }\n\n    .stat-card:hover {\n      transform: translateY(-5px);\n      box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n    }\n\n    .stat-icon {\n      font-size: 2.5rem;\n      margin-bottom: 15px;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n    }\n\n    .stat-number {\n      font-size: 2rem;\n      font-weight: bold;\n      color: #333;\n      margin-bottom: 5px;\n    }\n\n    .stat-label {\n      color: #666;\n      font-size: 0.9rem;\n    }\n\n    .filters-section {\n      background: white;\n      border-radius: 12px;\n      padding: 20px;\n      margin-bottom: 20px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n    }\n\n    .search-box {\n      position: relative;\n    }\n\n    .search-box i {\n      position: absolute;\n      left: 15px;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #666;\n      z-index: 1;\n    }\n\n    .search-box .form-control {\n      padding-left: 45px;\n    }\n\n    .filter-controls {\n      display: flex;\n      gap: 10px;\n    }\n\n    .card {\n      border: none;\n      border-radius: 12px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n      margin-bottom: 20px;\n      transition: all 0.3s ease;\n    }\n\n    .card:hover {\n      box-shadow: 0 4px 20px rgba(0,0,0,0.15);\n      transform: translateY(-2px);\n    }\n\n    .card-header {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n      border-radius: 12px 12px 0 0 !important;\n      padding: 20px;\n      font-weight: 600;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .table-actions {\n      display: flex;\n      gap: 10px;\n    }\n\n    .item-row {\n      transition: all 0.3s ease;\n    }\n\n    .item-row:hover {\n      background-color: #f8f9fa;\n      transform: scale(1.01);\n    }\n\n    .item-info {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .description-text {\n      max-width: 300px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    .category-badge,\n    .brand-badge {\n      display: inline-block;\n      padding: 4px 8px;\n      border-radius: 12px;\n      font-size: 0.8rem;\n      font-weight: 500;\n      background: rgba(102, 126, 234, 0.1);\n      color: #667eea;\n    }\n\n    .action-buttons {\n      display: flex;\n      gap: 5px;\n      flex-wrap: wrap;\n    }\n\n    .action-buttons .btn {\n      padding: 6px 10px;\n      font-size: 0.8rem;\n    }\n\n    .empty-state {\n      text-align: center;\n      padding: 40px;\n      color: #666;\n    }\n\n    .empty-state i {\n      font-size: 4rem;\n      color: #ddd;\n      margin-bottom: 20px;\n    }\n\n    .empty-state h4 {\n      color: #333;\n      margin-bottom: 10px;\n    }\n\n    .pagination-section {\n      background: white;\n      border-radius: 12px;\n      padding: 20px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      flex-wrap: wrap;\n      gap: 20px;\n    }\n\n    .pagination-info {\n      color: #666;\n      font-size: 0.9rem;\n    }\n\n    .pagination {\n      margin: 0;\n    }\n\n    .page-link {\n      color: #667eea;\n      border: none;\n      padding: 8px 12px;\n      margin: 0 2px;\n      border-radius: 6px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n    }\n\n    .page-link:hover {\n      background: rgba(102, 126, 234, 0.1);\n      color: #667eea;\n    }\n\n    .page-item.active .page-link {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n    }\n\n    .page-item.disabled .page-link {\n      color: #ccc;\n      cursor: not-allowed;\n    }\n\n    /* Responsive */\n    @media (max-width: 768px) {\n      .header-content {\n        flex-direction: column;\n        align-items: stretch;\n      }\n\n      .header-actions {\n        justify-content: center;\n      }\n\n      .filter-controls {\n        flex-direction: column;\n      }\n\n      .pagination-section {\n        flex-direction: column;\n        text-align: center;\n      }\n\n      .action-buttons {\n        flex-direction: column;\n      }\n    }\n  `]\n})], ItemListComponent);\nexport { ItemListComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}