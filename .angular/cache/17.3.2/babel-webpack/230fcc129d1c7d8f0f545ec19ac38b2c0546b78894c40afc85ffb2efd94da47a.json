{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nlet PCListComponent = class PCListComponent {\n  constructor(router, pcService, locationService, alertService, accountService) {\n    this.router = router;\n    this.pcService = pcService;\n    this.locationService = locationService;\n    this.alertService = alertService;\n    this.accountService = accountService;\n    this.Role = Role;\n    this.pcs = [];\n    this.locations = [];\n    this.filteredPCs = [];\n    this.searchTerm = '';\n    this.selectedStatus = '';\n    this.selectedLocation = '';\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n    this.Math = Math;\n  }\n  ngOnInit() {\n    console.log('PC List Component - ngOnInit called');\n    this.loadData();\n  }\n  loadData() {\n    console.log('PC List Component - loadData called');\n    this.loadPCs();\n    this.loadLocations();\n  }\n  loadPCs() {\n    console.log('PC List Component - loadPCs called');\n    this.pcService.getAll().pipe(first()).subscribe({\n      next: pcs => {\n        console.log('PC List Component - PCs loaded:', pcs);\n        this.pcs = pcs;\n        this.applyFilters();\n      },\n      error: error => {\n        console.error('PC List Component - Error loading PCs:', error);\n        this.alertService.error(error);\n      }\n    });\n  }\n  loadLocations() {\n    this.locationService.getAll().pipe(first()).subscribe({\n      next: locations => {\n        this.locations = locations;\n      },\n      error: error => {\n        this.alertService.error(error);\n      }\n    });\n  }\n  applyFilters() {\n    let filtered = [...this.pcs];\n    // Search filter\n    if (this.searchTerm) {\n      filtered = filtered.filter(pc => {\n        const pcName = pc.name.toLowerCase();\n        const serialNumber = (pc.serialNumber || '').toLowerCase();\n        const assignedTo = (pc.assignedTo || '').toLowerCase();\n        return pcName.includes(this.searchTerm.toLowerCase()) || serialNumber.includes(this.searchTerm.toLowerCase()) || assignedTo.includes(this.searchTerm.toLowerCase());\n      });\n    }\n    // Status filter\n    if (this.selectedStatus) {\n      filtered = filtered.filter(pc => pc.status === this.selectedStatus);\n    }\n    // Location filter\n    if (this.selectedLocation) {\n      filtered = filtered.filter(pc => pc.roomLocationId == this.selectedLocation);\n    }\n    this.filteredPCs = filtered;\n    this.currentPage = 1;\n  }\n  onSearch() {\n    this.applyFilters();\n  }\n  onFilterChange() {\n    this.applyFilters();\n  }\n  refreshData() {\n    this.loadData();\n    this.alertService.success('Data refreshed successfully');\n  }\n  getActiveCount() {\n    return this.pcs.filter(pc => pc.status === 'Active').length;\n  }\n  getMaintenanceCount() {\n    return this.pcs.filter(pc => pc.status === 'Maintenance').length;\n  }\n  getUniqueLocations() {\n    const locationIds = [...new Set(this.pcs.map(pc => pc.roomLocationId))];\n    return locationIds.length;\n  }\n  getLocationName(locationId) {\n    const location = this.locations.find(l => l.id === locationId);\n    return location ? location.name : 'Unknown Location';\n  }\n  hasRole(roles) {\n    const account = this.accountService.accountValue;\n    if (!account) return false;\n    const userRole = account.role;\n    return roles.some(role => role === userRole);\n  }\n  viewPC(id) {\n    this.router.navigate(['/pc', id]);\n  }\n  viewComponents(id) {\n    this.router.navigate(['/pc', id, 'components']);\n  }\n  editPC(id) {\n    this.router.navigate(['/pc', id, 'edit']);\n  }\n  deletePC(id) {\n    if (confirm('Are you sure you want to delete this PC?')) {\n      this.pcService.delete(id).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('PC deleted successfully');\n          this.loadPCs();\n        },\n        error: error => {\n          this.alertService.error(error);\n        }\n      });\n    }\n  }\n  viewStock(pcId) {\n    this.router.navigate(['/stocks'], {\n      queryParams: {\n        pcId\n      }\n    });\n  }\n  testNavigation() {\n    console.log('Testing navigation to /pc/add');\n    this.router.navigate(['/pc/add']);\n  }\n  // Pagination methods\n  get totalPages() {\n    return Math.ceil(this.filteredPCs.length / this.itemsPerPage);\n  }\n  get paginatedPCs() {\n    const start = (this.currentPage - 1) * this.itemsPerPage;\n    const end = start + this.itemsPerPage;\n    return this.filteredPCs.slice(start, end);\n  }\n  getPageNumbers() {\n    const pages = [];\n    const maxPages = Math.min(5, this.totalPages);\n    const start = Math.max(1, this.currentPage - Math.floor(maxPages / 2));\n    const end = Math.min(this.totalPages, start + maxPages - 1);\n    for (let i = start; i <= end; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }\n  goToPage(page) {\n    if (page >= 1 && page <= this.totalPages) {\n      this.currentPage = page;\n    }\n  }\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n    }\n  }\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.currentPage++;\n    }\n  }\n};\nPCListComponent = __decorate([Component({\n  selector: 'app-pc-list',\n  templateUrl: './pc-list.component.html',\n  styles: [`\n    .list-container {\n      padding: 20px 0;\n    }\n\n    .page-header {\n      background: white;\n      border-radius: 12px;\n      padding: 30px;\n      margin-bottom: 30px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n    }\n\n    .header-content {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      flex-wrap: wrap;\n      gap: 20px;\n    }\n\n    .header-title {\n      display: flex;\n      align-items: center;\n      gap: 15px;\n    }\n\n    .header-title i {\n      font-size: 2.5rem;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n    }\n\n    .page-title {\n      font-size: 2.5rem;\n      font-weight: bold;\n      color: #333;\n      margin: 0 0 5px 0;\n    }\n\n    .page-subtitle {\n      color: #666;\n      font-size: 1.1rem;\n      margin: 0;\n    }\n\n    .header-actions {\n      display: flex;\n      gap: 10px;\n      flex-wrap: wrap;\n    }\n\n    .stats-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      gap: 20px;\n      margin-bottom: 30px;\n    }\n\n    .stat-card {\n      background: white;\n      border-radius: 12px;\n      padding: 25px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n      transition: all 0.3s ease;\n      text-align: center;\n    }\n\n    .stat-card:hover {\n      transform: translateY(-5px);\n      box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n    }\n\n    .stat-icon {\n      font-size: 3rem;\n      margin-bottom: 15px;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n    }\n\n    .stat-number {\n      font-size: 2.5rem;\n      font-weight: bold;\n      color: #333;\n      margin-bottom: 5px;\n    }\n\n    .stat-label {\n      color: #666;\n      font-size: 1rem;\n    }\n\n    .filters-section {\n      background: white;\n      border-radius: 12px;\n      padding: 20px;\n      margin-bottom: 20px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n    }\n\n    .search-box {\n      position: relative;\n    }\n\n    .search-box i {\n      position: absolute;\n      left: 15px;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #666;\n      z-index: 1;\n    }\n\n    .search-box .form-control {\n      padding-left: 45px;\n    }\n\n    .filter-controls {\n      display: flex;\n      gap: 10px;\n    }\n\n    .card {\n      border: none;\n      border-radius: 12px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n      margin-bottom: 20px;\n      transition: all 0.3s ease;\n    }\n\n    .card:hover {\n      box-shadow: 0 4px 20px rgba(0,0,0,0.15);\n      transform: translateY(-2px);\n    }\n\n    .card-header {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n      border-radius: 12px 12px 0 0 !important;\n      padding: 20px;\n      font-weight: 600;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .table-actions {\n      display: flex;\n      gap: 10px;\n    }\n\n    .pc-row {\n      transition: all 0.3s ease;\n    }\n\n    .pc-row:hover {\n      background-color: #f8f9fa;\n      transform: scale(1.01);\n    }\n\n    .pc-info {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .serial-number {\n      font-family: monospace;\n      font-size: 0.9rem;\n      color: #666;\n    }\n\n    .location-badge {\n      display: inline-block;\n      padding: 4px 8px;\n      border-radius: 12px;\n      font-size: 0.8rem;\n      font-weight: 500;\n      background: rgba(102, 126, 234, 0.1);\n      color: #667eea;\n    }\n\n    .assigned-to {\n      font-weight: 500;\n      color: #333;\n    }\n\n    .status-badge {\n      padding: 6px 12px;\n      border-radius: 20px;\n      font-size: 0.9rem;\n      font-weight: 600;\n    }\n\n    .created-date {\n      font-size: 0.9rem;\n      color: #666;\n    }\n\n    .action-buttons {\n      display: flex;\n      gap: 5px;\n      flex-wrap: wrap;\n    }\n\n    .action-buttons .btn {\n      padding: 6px 10px;\n      font-size: 0.8rem;\n    }\n\n    .empty-state {\n      text-align: center;\n      padding: 40px;\n      color: #666;\n    }\n\n    .empty-state i {\n      font-size: 4rem;\n      color: #ddd;\n      margin-bottom: 20px;\n    }\n\n    .empty-state h4 {\n      color: #333;\n      margin-bottom: 10px;\n    }\n\n    .pagination-section {\n      background: white;\n      border-radius: 12px;\n      padding: 20px;\n      box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      flex-wrap: wrap;\n      gap: 20px;\n    }\n\n    .pagination-info {\n      color: #666;\n      font-size: 0.9rem;\n    }\n\n    .pagination {\n      margin: 0;\n    }\n\n    .page-link {\n      color: #667eea;\n      border: none;\n      padding: 8px 12px;\n      margin: 0 2px;\n      border-radius: 6px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n    }\n\n    .page-link:hover {\n      background: rgba(102, 126, 234, 0.1);\n      color: #667eea;\n    }\n\n    .page-item.active .page-link {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n    }\n\n    .page-item.disabled .page-link {\n      color: #ccc;\n      cursor: not-allowed;\n    }\n\n    /* Responsive */\n    @media (max-width: 768px) {\n      .header-content {\n        flex-direction: column;\n        align-items: stretch;\n      }\n\n      .header-actions {\n        justify-content: center;\n      }\n\n      .filter-controls {\n        flex-direction: column;\n      }\n\n      .pagination-section {\n        flex-direction: column;\n        text-align: center;\n      }\n\n      .action-buttons {\n        flex-direction: column;\n      }\n    }\n  `]\n})], PCListComponent);\nexport { PCListComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}