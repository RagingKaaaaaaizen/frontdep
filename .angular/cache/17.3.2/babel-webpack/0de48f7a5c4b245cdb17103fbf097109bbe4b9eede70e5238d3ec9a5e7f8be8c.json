{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = (a0, a1, a2, a3) => ({\n  \"badge-success\": a0,\n  \"badge-warning\": a1,\n  \"badge-secondary\": a2,\n  \"badge-danger\": a3\n});\nconst _c1 = (a0, a1, a2, a3) => ({\n  \"badge-success\": a0,\n  \"badge-warning\": a1,\n  \"badge-danger\": a2,\n  \"badge-secondary\": a3\n});\nfunction PCListComponent_option_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 53);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const location_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", location_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", location_r1.name, \" \");\n  }\n}\nfunction PCListComponent_tr_116_small_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 72);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pc_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", pc_r3.notes, \" \");\n  }\n}\nfunction PCListComponent_tr_116_small_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 73);\n    i0.ɵɵelement(1, \"i\", 20);\n    i0.ɵɵtext(2, \" Auto-updated based on components \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PCListComponent_tr_116_small_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 72);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pc_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getComponentStatus(pc_r3.id).componentCount, \" component(s) \");\n  }\n}\nfunction PCListComponent_tr_116_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 54)(1, \"td\")(2, \"div\", 55)(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, PCListComponent_tr_116_small_5_Template, 2, 1, \"small\", 56);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"td\")(7, \"span\", 57);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\")(10, \"span\", 58);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\")(13, \"span\", 59);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"span\", 60);\n    i0.ɵɵelement(17, \"i\", 61);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, PCListComponent_tr_116_small_19_Template, 3, 0, \"small\", 62);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\")(21, \"span\", 60);\n    i0.ɵɵelement(22, \"i\", 47);\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(24, PCListComponent_tr_116_small_24_Template, 2, 1, \"small\", 56);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\")(26, \"span\", 63);\n    i0.ɵɵtext(27);\n    i0.ɵɵpipe(28, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"td\")(30, \"div\", 64)(31, \"button\", 65);\n    i0.ɵɵlistener(\"click\", function PCListComponent_tr_116_Template_button_click_31_listener() {\n      const pc_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.viewPC(pc_r3.id));\n    });\n    i0.ɵɵelement(32, \"i\", 66);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"button\", 67);\n    i0.ɵɵlistener(\"click\", function PCListComponent_tr_116_Template_button_click_33_listener() {\n      const pc_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.viewComponents(pc_r3.id));\n    });\n    i0.ɵɵelement(34, \"i\", 47);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"button\", 68);\n    i0.ɵɵlistener(\"click\", function PCListComponent_tr_116_Template_button_click_35_listener() {\n      const pc_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editPC(pc_r3.id));\n    });\n    i0.ɵɵelement(36, \"i\", 69);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"button\", 70);\n    i0.ɵɵlistener(\"click\", function PCListComponent_tr_116_Template_button_click_37_listener() {\n      const pc_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deletePC(pc_r3.id));\n    });\n    i0.ɵɵelement(38, \"i\", 71);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const pc_r3 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(pc_r3.name);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", pc_r3.notes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", pc_r3.serialNumber || \"No Serial\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getLocationName(pc_r3.roomLocationId), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", pc_r3.assignedTo || \"Unassigned\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(15, _c0, pc_r3.status === \"Active\", pc_r3.status === \"Maintenance\", pc_r3.status === \"Inactive\", pc_r3.status === \"Retired\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", pc_r3.status, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.getComponentStatus(pc_r3.id).status !== \"No Components\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(20, _c1, ctx_r3.getComponentStatus(pc_r3.id).status === \"Working\", ctx_r3.getComponentStatus(pc_r3.id).status === \"Maintenance\", ctx_r3.getComponentStatus(pc_r3.id).status === \"Not Working\", ctx_r3.getComponentStatus(pc_r3.id).status === \"No Components\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getComponentStatus(pc_r3.id).status, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.getComponentStatus(pc_r3.id).componentCount > 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(28, 12, pc_r3.createdAt, \"short\"), \" \");\n  }\n}\nfunction PCListComponent_tr_117_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 74)(2, \"div\", 75);\n    i0.ɵɵelement(3, \"i\", 5);\n    i0.ɵɵelementStart(4, \"h4\");\n    i0.ɵɵtext(5, \"No PCs found\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7, \"Try adjusting your search or filters\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction PCListComponent_div_118_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 80)(1, \"a\", 81);\n    i0.ɵɵlistener(\"click\", function PCListComponent_div_118_li_8_Template_a_click_1_listener() {\n      const page_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.goToPage(page_r7));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const page_r7 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"active\", page_r7 === ctx_r3.currentPage);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(page_r7);\n  }\n}\nfunction PCListComponent_div_118_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 76)(1, \"div\", 77);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"nav\", 78)(4, \"ul\", 79)(5, \"li\", 80)(6, \"a\", 81);\n    i0.ɵɵlistener(\"click\", function PCListComponent_div_118_Template_a_click_6_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.previousPage());\n    });\n    i0.ɵɵelement(7, \"i\", 82);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, PCListComponent_div_118_li_8_Template, 3, 3, \"li\", 83);\n    i0.ɵɵelementStart(9, \"li\", 80)(10, \"a\", 81);\n    i0.ɵɵlistener(\"click\", function PCListComponent_div_118_Template_a_click_10_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.nextPage());\n    });\n    i0.ɵɵelement(11, \"i\", 84);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" Showing \", (ctx_r3.currentPage - 1) * ctx_r3.itemsPerPage + 1, \" to \", ctx_r3.Math.min(ctx_r3.currentPage * ctx_r3.itemsPerPage, ctx_r3.filteredPCs.length), \" of \", ctx_r3.filteredPCs.length, \" entries \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassProp(\"disabled\", ctx_r3.currentPage === 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.getPageNumbers());\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"disabled\", ctx_r3.currentPage === ctx_r3.totalPages);\n  }\n}\nexport let PCListComponent = /*#__PURE__*/(() => {\n  class PCListComponent {\n    constructor(router, pcService, pcComponentService, locationService, alertService, accountService) {\n      this.router = router;\n      this.pcService = pcService;\n      this.pcComponentService = pcComponentService;\n      this.locationService = locationService;\n      this.alertService = alertService;\n      this.accountService = accountService;\n      this.Role = Role;\n      this.pcs = [];\n      this.locations = [];\n      this.pcComponents = [];\n      this.filteredPCs = [];\n      this.searchTerm = '';\n      this.selectedStatus = '';\n      this.selectedLocation = '';\n      this.currentPage = 1;\n      this.itemsPerPage = 10;\n      this.Math = Math;\n    }\n    ngOnInit() {\n      console.log('PC List Component - ngOnInit called');\n      this.loadData();\n      // Listen for component status changes\n      window.addEventListener('componentStatusChanged', this.handleComponentStatusChange.bind(this));\n    }\n    loadData() {\n      console.log('PC List Component - loadData called');\n      this.loadPCs();\n      this.loadLocations();\n      this.loadPCComponents();\n    }\n    loadPCs() {\n      console.log('PC List Component - loadPCs called');\n      this.pcService.getAll().pipe(first()).subscribe({\n        next: pcs => {\n          console.log('PC List Component - PCs loaded:', pcs);\n          this.pcs = pcs;\n          this.applyFilters();\n        },\n        error: error => {\n          console.error('PC List Component - Error loading PCs:', error);\n          this.alertService.error(error);\n        }\n      });\n    }\n    loadLocations() {\n      this.locationService.getAll().pipe(first()).subscribe({\n        next: locations => {\n          this.locations = locations;\n        },\n        error: error => {\n          this.alertService.error(error);\n        }\n      });\n    }\n    loadPCComponents() {\n      this.pcComponentService.getAll().pipe(first()).subscribe({\n        next: components => {\n          this.pcComponents = components;\n          // Auto-update PC statuses based on component statuses\n          this.autoUpdatePCStatus();\n        },\n        error: error => {\n          console.error('Error loading PC components:', error);\n        }\n      });\n    }\n    applyFilters() {\n      let filtered = [...this.pcs];\n      // Search filter\n      if (this.searchTerm) {\n        filtered = filtered.filter(pc => {\n          const pcName = pc.name.toLowerCase();\n          const serialNumber = (pc.serialNumber || '').toLowerCase();\n          const assignedTo = (pc.assignedTo || '').toLowerCase();\n          return pcName.includes(this.searchTerm.toLowerCase()) || serialNumber.includes(this.searchTerm.toLowerCase()) || assignedTo.includes(this.searchTerm.toLowerCase());\n        });\n      }\n      // Status filter\n      if (this.selectedStatus) {\n        filtered = filtered.filter(pc => pc.status === this.selectedStatus);\n      }\n      // Location filter\n      if (this.selectedLocation) {\n        filtered = filtered.filter(pc => pc.roomLocationId == this.selectedLocation);\n      }\n      this.filteredPCs = filtered;\n      this.currentPage = 1;\n    }\n    onSearch() {\n      this.applyFilters();\n    }\n    onFilterChange() {\n      this.applyFilters();\n    }\n    refreshData() {\n      this.loadData();\n      this.alertService.success('Data refreshed successfully');\n    }\n    getActiveCount() {\n      return this.pcs.filter(pc => pc.status === 'Active').length;\n    }\n    getMaintenanceCount() {\n      return this.pcs.filter(pc => pc.status === 'Maintenance').length;\n    }\n    getAutoUpdatedCount() {\n      return this.pcs.filter(pc => {\n        const componentStatus = this.getComponentStatus(pc.id);\n        return componentStatus.status !== 'No Components' && (componentStatus.status === 'Not Working' || componentStatus.status === 'Maintenance');\n      }).length;\n    }\n    getUniqueLocations() {\n      const locationIds = [...new Set(this.pcs.map(pc => pc.roomLocationId))];\n      return locationIds.length;\n    }\n    getLocationName(locationId) {\n      const location = this.locations.find(l => l.id === locationId);\n      return location ? location.name : 'Unknown Location';\n    }\n    hasRole(roles) {\n      const account = this.accountService.accountValue;\n      if (!account) return false;\n      const userRole = account.role;\n      return roles.some(role => role === userRole);\n    }\n    viewPC(id) {\n      this.router.navigate(['/pc', id]);\n    }\n    viewComponents(id) {\n      this.router.navigate(['/pc', id, 'components']);\n    }\n    editPC(id) {\n      this.router.navigate(['/pc', id, 'edit']);\n    }\n    deletePC(id) {\n      if (confirm('Are you sure you want to delete this PC?')) {\n        this.pcService.delete(id).pipe(first()).subscribe({\n          next: () => {\n            this.alertService.success('PC deleted successfully');\n            this.loadPCs();\n          },\n          error: error => {\n            this.alertService.error(error);\n          }\n        });\n      }\n    }\n    viewStock(pcId) {\n      this.router.navigate(['/stocks'], {\n        queryParams: {\n          pcId\n        }\n      });\n    }\n    testNavigation() {\n      console.log('Testing navigation to /pc/add');\n      this.router.navigate(['/pc/add']);\n    }\n    // Pagination methods\n    get totalPages() {\n      return Math.ceil(this.filteredPCs.length / this.itemsPerPage);\n    }\n    get paginatedPCs() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredPCs.slice(start, end);\n    }\n    getPageNumbers() {\n      const pages = [];\n      const maxPages = Math.min(5, this.totalPages);\n      const start = Math.max(1, this.currentPage - Math.floor(maxPages / 2));\n      const end = Math.min(this.totalPages, start + maxPages - 1);\n      for (let i = start; i <= end; i++) {\n        pages.push(i);\n      }\n      return pages;\n    }\n    goToPage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    }\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n    getComponentStatus(pcId) {\n      const pcComponents = this.pcComponents.filter(c => c.pcId === pcId);\n      if (pcComponents.length === 0) {\n        return {\n          status: 'No Components',\n          componentCount: 0\n        };\n      }\n      const hasMissing = pcComponents.some(c => c.status === 'Missing');\n      const hasNotWorking = pcComponents.some(c => c.status === 'Not Working');\n      const hasMaintenance = pcComponents.some(c => c.status === 'Maintenance');\n      const allWorking = pcComponents.every(c => c.status === 'Working');\n      if (hasMissing || hasNotWorking) {\n        return {\n          status: 'Not Working',\n          componentCount: pcComponents.length\n        };\n      } else if (hasMaintenance) {\n        return {\n          status: 'Maintenance',\n          componentCount: pcComponents.length\n        };\n      } else if (allWorking) {\n        return {\n          status: 'Working',\n          componentCount: pcComponents.length\n        };\n      } else {\n        return {\n          status: 'Unknown',\n          componentCount: pcComponents.length\n        };\n      }\n    }\n    // Auto-update PC status based on component statuses\n    autoUpdatePCStatus() {\n      this.pcs.forEach(pc => {\n        const componentStatus = this.getComponentStatus(pc.id);\n        let newPCStatus = pc.status; // Default to current status\n        // Auto-update PC status based on component statuses\n        if (componentStatus.status === 'Not Working') {\n          newPCStatus = 'Maintenance'; // Set PC to Maintenance if components are not working\n        } else if (componentStatus.status === 'Maintenance') {\n          newPCStatus = 'Maintenance'; // Set PC to Maintenance if components are in maintenance\n        } else if (componentStatus.status === 'Working' && pc.status === 'Maintenance') {\n          // If all components are working but PC was in maintenance, set back to Active\n          newPCStatus = 'Active';\n        }\n        // Only update if status actually changed\n        if (newPCStatus !== pc.status) {\n          console.log(`Auto-updating PC ${pc.name} status from ${pc.status} to ${newPCStatus}`);\n          this.updatePCStatus(pc.id, newPCStatus);\n        }\n      });\n    }\n    // Update PC status\n    updatePCStatus(pcId, newStatus) {\n      const pc = this.pcs.find(p => p.id === pcId);\n      if (!pc) return;\n      // Create a copy of the PC object with updated status\n      const updatedPC = {\n        ...pc,\n        status: newStatus\n      };\n      this.pcService.update(pcId, updatedPC).pipe(first()).subscribe({\n        next: () => {\n          console.log(`PC ${pc.name} status updated to ${newStatus}`);\n          // Update local PC data\n          pc.status = newStatus;\n          this.applyFilters(); // Refresh the filtered list\n        },\n        error: error => {\n          console.error(`Error updating PC status:`, error);\n          this.alertService.error('Error updating PC status');\n        }\n      });\n    }\n    // Handle component status changes\n    handleComponentStatusChange(event) {\n      console.log('Component status change detected, refreshing PC components...');\n      this.loadPCComponents(); // This will trigger autoUpdatePCStatus\n    }\n    ngOnDestroy() {\n      // Clean up event listener\n      window.removeEventListener('componentStatusChanged', this.handleComponentStatusChange.bind(this));\n    }\n    static #_ = this.ɵfac = function PCListComponent_Factory(t) {\n      return new (t || PCListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PCService), i0.ɵɵdirectiveInject(i2.PCComponentService), i0.ɵɵdirectiveInject(i2.RoomLocationService), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i2.AccountService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PCListComponent,\n      selectors: [[\"app-pc-list\"]],\n      decls: 119,\n      vars: 12,\n      consts: [[1, \"list-container\"], [1, \"container\"], [1, \"page-header\"], [1, \"header-content\"], [1, \"header-title\"], [1, \"fas\", \"fa-desktop\"], [1, \"page-title\"], [1, \"page-subtitle\"], [1, \"header-actions\"], [\"routerLink\", \"/pc/add\", 1, \"btn\", \"btn-primary\"], [1, \"fas\", \"fa-plus\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"ml-2\", 3, \"click\"], [1, \"fas\", \"fa-test\"], [1, \"stats-grid\"], [1, \"stat-card\"], [1, \"stat-icon\"], [1, \"stat-number\"], [1, \"stat-label\"], [1, \"fas\", \"fa-check-circle\"], [1, \"fas\", \"fa-tools\"], [1, \"fas\", \"fa-sync-alt\"], [1, \"fas\", \"fa-map-marker-alt\"], [1, \"filters-section\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"search-box\"], [1, \"fas\", \"fa-search\"], [\"type\", \"text\", \"placeholder\", \"Search PCs...\", 1, \"form-control\", 3, \"ngModelChange\", \"input\", \"ngModel\"], [1, \"filter-controls\"], [1, \"form-select\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"value\", \"\"], [\"value\", \"Active\"], [\"value\", \"Inactive\"], [\"value\", \"Maintenance\"], [\"value\", \"Retired\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [1, \"card-header\"], [1, \"fas\", \"fa-list\"], [1, \"table-actions\"], [1, \"btn\", \"btn-sm\", \"btn-outline-secondary\", 3, \"click\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [1, \"fas\", \"fa-barcode\"], [1, \"fas\", \"fa-user\"], [1, \"fas\", \"fa-info-circle\"], [1, \"fas\", \"fa-microchip\"], [1, \"fas\", \"fa-calendar\"], [1, \"fas\", \"fa-cogs\"], [\"class\", \"pc-row\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"pagination-section\", 4, \"ngIf\"], [3, \"value\"], [1, \"pc-row\"], [1, \"pc-info\"], [\"class\", \"d-block text-muted\", 4, \"ngIf\"], [1, \"serial-number\"], [1, \"location-badge\"], [1, \"assigned-to\"], [1, \"status-badge\", 3, \"ngClass\"], [1, \"fas\", \"fa-circle\"], [\"class\", \"d-block text-muted mt-1\", 4, \"ngIf\"], [1, \"created-date\"], [1, \"action-buttons\"], [\"type\", \"button\", \"title\", \"View Details\", 1, \"btn\", \"btn-sm\", \"btn-outline-primary\", 3, \"click\"], [1, \"fas\", \"fa-eye\"], [\"type\", \"button\", \"title\", \"View Components\", 1, \"btn\", \"btn-sm\", \"btn-outline-info\", 3, \"click\"], [\"type\", \"button\", \"title\", \"Edit PC\", 1, \"btn\", \"btn-sm\", \"btn-outline-warning\", 3, \"click\"], [1, \"fas\", \"fa-edit\"], [\"type\", \"button\", \"title\", \"Delete PC\", 1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"], [1, \"fas\", \"fa-trash\"], [1, \"d-block\", \"text-muted\"], [1, \"d-block\", \"text-muted\", \"mt-1\"], [\"colspan\", \"7\", 1, \"text-center\", \"py-4\"], [1, \"empty-state\"], [1, \"pagination-section\"], [1, \"pagination-info\"], [\"aria-label\", \"PC pagination\"], [1, \"pagination\", \"justify-content-center\"], [1, \"page-item\"], [1, \"page-link\", 3, \"click\"], [1, \"fas\", \"fa-chevron-left\"], [\"class\", \"page-item\", 3, \"active\", 4, \"ngFor\", \"ngForOf\"], [1, \"fas\", \"fa-chevron-right\"]],\n      template: function PCListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n          i0.ɵɵelement(5, \"i\", 5);\n          i0.ɵɵelementStart(6, \"div\")(7, \"h1\", 6);\n          i0.ɵɵtext(8, \"PC Management\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p\", 7);\n          i0.ɵɵtext(10, \"Manage and track your computer systems\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"a\", 9);\n          i0.ɵɵelement(13, \"i\", 10);\n          i0.ɵɵtext(14, \" Add PC \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function PCListComponent_Template_button_click_15_listener() {\n            return ctx.testNavigation();\n          });\n          i0.ɵɵelement(16, \"i\", 12);\n          i0.ɵɵtext(17, \" Test Navigation \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(18, \"div\", 13)(19, \"div\", 14)(20, \"div\", 15);\n          i0.ɵɵelement(21, \"i\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 16);\n          i0.ɵɵtext(23);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"div\", 17);\n          i0.ɵɵtext(25, \"Total PCs\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"div\", 14)(27, \"div\", 15);\n          i0.ɵɵelement(28, \"i\", 18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 16);\n          i0.ɵɵtext(30);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"div\", 17);\n          i0.ɵɵtext(32, \"Active PCs\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(33, \"div\", 14)(34, \"div\", 15);\n          i0.ɵɵelement(35, \"i\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"div\", 16);\n          i0.ɵɵtext(37);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"div\", 17);\n          i0.ɵɵtext(39, \"In Maintenance\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(40, \"div\", 14)(41, \"div\", 15);\n          i0.ɵɵelement(42, \"i\", 20);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"div\", 16);\n          i0.ɵɵtext(44);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"div\", 17);\n          i0.ɵɵtext(46, \"Auto-Updated\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(47, \"div\", 14)(48, \"div\", 15);\n          i0.ɵɵelement(49, \"i\", 21);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"div\", 16);\n          i0.ɵɵtext(51);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(52, \"div\", 17);\n          i0.ɵɵtext(53, \"Locations\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(54, \"div\", 22)(55, \"div\", 23)(56, \"div\", 24)(57, \"div\", 25);\n          i0.ɵɵelement(58, \"i\", 26);\n          i0.ɵɵelementStart(59, \"input\", 27);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function PCListComponent_Template_input_ngModelChange_59_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.searchTerm, $event) || (ctx.searchTerm = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"input\", function PCListComponent_Template_input_input_59_listener() {\n            return ctx.onSearch();\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(60, \"div\", 24)(61, \"div\", 28)(62, \"select\", 29);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function PCListComponent_Template_select_ngModelChange_62_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedStatus, $event) || (ctx.selectedStatus = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function PCListComponent_Template_select_change_62_listener() {\n            return ctx.onFilterChange();\n          });\n          i0.ɵɵelementStart(63, \"option\", 30);\n          i0.ɵɵtext(64, \"All Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(65, \"option\", 31);\n          i0.ɵɵtext(66, \"Active\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(67, \"option\", 32);\n          i0.ɵɵtext(68, \"Inactive\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(69, \"option\", 33);\n          i0.ɵɵtext(70, \"Maintenance\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(71, \"option\", 34);\n          i0.ɵɵtext(72, \"Retired\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(73, \"select\", 29);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function PCListComponent_Template_select_ngModelChange_73_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedLocation, $event) || (ctx.selectedLocation = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function PCListComponent_Template_select_change_73_listener() {\n            return ctx.onFilterChange();\n          });\n          i0.ɵɵelementStart(74, \"option\", 30);\n          i0.ɵɵtext(75, \"All Locations\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(76, PCListComponent_option_76_Template, 2, 2, \"option\", 35);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(77, \"div\", 36)(78, \"div\", 37)(79, \"h5\");\n          i0.ɵɵelement(80, \"i\", 38);\n          i0.ɵɵtext(81, \" PC Systems\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(82, \"div\", 39)(83, \"button\", 40);\n          i0.ɵɵlistener(\"click\", function PCListComponent_Template_button_click_83_listener() {\n            return ctx.refreshData();\n          });\n          i0.ɵɵelement(84, \"i\", 20);\n          i0.ɵɵtext(85, \" Refresh \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(86, \"div\", 41)(87, \"div\", 42)(88, \"table\", 43)(89, \"thead\")(90, \"tr\")(91, \"th\");\n          i0.ɵɵelement(92, \"i\", 5);\n          i0.ɵɵtext(93, \" PC Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(94, \"th\");\n          i0.ɵɵelement(95, \"i\", 44);\n          i0.ɵɵtext(96, \" Serial Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(97, \"th\");\n          i0.ɵɵelement(98, \"i\", 21);\n          i0.ɵɵtext(99, \" Location\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(100, \"th\");\n          i0.ɵɵelement(101, \"i\", 45);\n          i0.ɵɵtext(102, \" Assigned To\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(103, \"th\");\n          i0.ɵɵelement(104, \"i\", 46);\n          i0.ɵɵtext(105, \" Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(106, \"th\");\n          i0.ɵɵelement(107, \"i\", 47);\n          i0.ɵɵtext(108, \" Component Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(109, \"th\");\n          i0.ɵɵelement(110, \"i\", 48);\n          i0.ɵɵtext(111, \" Created\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(112, \"th\");\n          i0.ɵɵelement(113, \"i\", 49);\n          i0.ɵɵtext(114, \" Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(115, \"tbody\");\n          i0.ɵɵtemplate(116, PCListComponent_tr_116_Template, 39, 25, \"tr\", 50)(117, PCListComponent_tr_117_Template, 8, 0, \"tr\", 51);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵtemplate(118, PCListComponent_div_118_Template, 12, 8, \"div\", 52);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(23);\n          i0.ɵɵtextInterpolate(ctx.pcs.length);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.getActiveCount());\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.getMaintenanceCount());\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.getAutoUpdatedCount());\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.getUniqueLocations());\n          i0.ɵɵadvance(8);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.searchTerm);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedStatus);\n          i0.ɵɵadvance(11);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedLocation);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.locations);\n          i0.ɵɵadvance(40);\n          i0.ɵɵproperty(\"ngForOf\", ctx.paginatedPCs);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.paginatedPCs.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.filteredPCs.length > 0);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel, i1.RouterLink, i3.DatePipe],\n      styles: [\".list-container[_ngcontent-%COMP%]{padding:20px 0}.page-header[_ngcontent-%COMP%]{background:#fff;border-radius:12px;padding:30px;margin-bottom:30px;box-shadow:0 2px 10px #0000001a}.header-content[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;gap:20px}.header-title[_ngcontent-%COMP%]{display:flex;align-items:center;gap:15px}.header-title[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:2.5rem;background:linear-gradient(135deg,#667eea,#764ba2);-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text}.page-title[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:700;color:#333;margin:0 0 5px}.page-subtitle[_ngcontent-%COMP%]{color:#666;font-size:1.1rem;margin:0}.header-actions[_ngcontent-%COMP%]{display:flex;gap:10px;flex-wrap:wrap}.stats-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));gap:20px;margin-bottom:30px}.stat-card[_ngcontent-%COMP%]{background:#fff;border-radius:12px;padding:25px;box-shadow:0 2px 10px #0000001a;transition:all .3s ease;text-align:center}.stat-card[_ngcontent-%COMP%]:hover{transform:translateY(-5px);box-shadow:0 8px 25px #00000026}.stat-icon[_ngcontent-%COMP%]{font-size:3rem;margin-bottom:15px;background:linear-gradient(135deg,#667eea,#764ba2);-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text}.stat-number[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:700;color:#333;margin-bottom:5px}.stat-label[_ngcontent-%COMP%]{color:#666;font-size:1rem}.filters-section[_ngcontent-%COMP%]{background:#fff;border-radius:12px;padding:20px;margin-bottom:20px;box-shadow:0 2px 10px #0000001a}.search-box[_ngcontent-%COMP%]{position:relative}.search-box[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{position:absolute;left:15px;top:50%;transform:translateY(-50%);color:#666;z-index:1}.search-box[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{padding-left:45px}.filter-controls[_ngcontent-%COMP%]{display:flex;gap:10px}.card[_ngcontent-%COMP%]{border:none;border-radius:12px;box-shadow:0 2px 10px #0000001a;margin-bottom:20px;transition:all .3s ease}.card[_ngcontent-%COMP%]:hover{box-shadow:0 4px 20px #00000026;transform:translateY(-2px)}.card-header[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);color:#fff;border-radius:12px 12px 0 0!important;padding:20px;font-weight:600;display:flex;justify-content:space-between;align-items:center}.table-actions[_ngcontent-%COMP%]{display:flex;gap:10px}.pc-row[_ngcontent-%COMP%]{transition:all .3s ease}.pc-row[_ngcontent-%COMP%]:hover{background-color:#f8f9fa;transform:scale(1.01)}.pc-info[_ngcontent-%COMP%]{display:flex;flex-direction:column}.serial-number[_ngcontent-%COMP%]{font-family:monospace;font-size:.9rem;color:#666}.location-badge[_ngcontent-%COMP%]{display:inline-block;padding:4px 8px;border-radius:12px;font-size:.8rem;font-weight:500;background:#667eea1a;color:#667eea}.assigned-to[_ngcontent-%COMP%]{font-weight:500;color:#333}.status-badge[_ngcontent-%COMP%]{padding:6px 12px;border-radius:20px;font-size:.9rem;font-weight:600}.created-date[_ngcontent-%COMP%]{font-size:.9rem;color:#666}.action-buttons[_ngcontent-%COMP%]{display:flex;gap:5px;flex-wrap:wrap}.action-buttons[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{padding:6px 10px;font-size:.8rem}.empty-state[_ngcontent-%COMP%]{text-align:center;padding:40px;color:#666}.empty-state[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:4rem;color:#ddd;margin-bottom:20px}.empty-state[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{color:#333;margin-bottom:10px}.pagination-section[_ngcontent-%COMP%]{background:#fff;border-radius:12px;padding:20px;box-shadow:0 2px 10px #0000001a;display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;gap:20px}.pagination-info[_ngcontent-%COMP%]{color:#666;font-size:.9rem}.pagination[_ngcontent-%COMP%]{margin:0}.page-link[_ngcontent-%COMP%]{color:#667eea;border:none;padding:8px 12px;margin:0 2px;border-radius:6px;cursor:pointer;transition:all .3s ease}.page-link[_ngcontent-%COMP%]:hover{background:#667eea1a;color:#667eea}.page-item.active[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea,#764ba2);color:#fff}.page-item.disabled[_ngcontent-%COMP%]   .page-link[_ngcontent-%COMP%]{color:#ccc;cursor:not-allowed}@media (max-width: 768px){.header-content[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch}.header-actions[_ngcontent-%COMP%]{justify-content:center}.filter-controls[_ngcontent-%COMP%]{flex-direction:column}.pagination-section[_ngcontent-%COMP%]{flex-direction:column;text-align:center}.action-buttons[_ngcontent-%COMP%]{flex-direction:column}}\"]\n    });\n  }\n  return PCListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}