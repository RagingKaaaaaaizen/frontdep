{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { DatePipe } from '@angular/common';\nimport { first } from \"rxjs/operators\";\nlet ListComponent = class ListComponent {\n  constructor(router, employeeService, alertService) {\n    this.router = router;\n    this.employeeService = employeeService;\n    this.alertService = alertService;\n    this.employees = [];\n    this.isDeleting = false;\n    this.showTransferModal = false;\n    this.showWorkflowModal = false;\n  }\n  ngOnInit() {\n    this.loadEmployees();\n  }\n  loadEmployees() {\n    console.log('Fetching updated employee list...'); // Debug log\n    this.employeeService.getAll().pipe(first()).subscribe({\n      next: employees => {\n        console.log('Updated employees list:', employees); // Debug log\n        this.employees = employees;\n      },\n      error: error => {\n        console.error('Error fetching employees:', error); // Debug log\n        this.alertService.error('Error fetching employees');\n      }\n    });\n  }\n  deleteEmployee(id) {\n    const employee = this.employees.find(x => x.id === id);\n    if (!employee) return;\n    this.isDeleting = true;\n    this.employeeService.delete(id).pipe(first()).subscribe({\n      next: () => {\n        this.employees = this.employees.filter(x => x.id !== id);\n        this.alertService.success('Employee deleted successfully');\n        this.isDeleting = false;\n      },\n      error: error => {\n        this.alertService.error(error?.message || 'Error deleting employee');\n        this.isDeleting = false;\n      }\n    });\n  }\n  openTransferModal(employee) {\n    if (!employee || !employee.id) {\n      this.alertService.error('Invalid employee data');\n      return;\n    }\n    this.selectedEmployee = {\n      ...employee\n    }; // Create a copy of the employee object\n    this.showTransferModal = true;\n  }\n  closeTransferModal() {\n    this.showTransferModal = false;\n    this.selectedEmployee = null;\n  }\n  onTransferComplete() {\n    this.loadEmployees(); // Reload the list to show updated department\n    this.closeTransferModal();\n  }\n  openWorkflowModal(employee) {\n    console.log('Opening workflow modal for employee:', employee); // Debug log\n    if (!employee || !employee.id) {\n      console.error('Invalid employee data:', employee); // Debug log\n      this.alertService.error('Invalid employee data');\n      return;\n    }\n    console.log('Setting selected employee:', employee); // Debug log\n    this.selectedEmployee = employee;\n    console.log('Setting showWorkflowModal to true'); // Debug log\n    this.showWorkflowModal = true;\n    console.log('Modal state:', {\n      showWorkflowModal: this.showWorkflowModal,\n      selectedEmployee: this.selectedEmployee\n    }); // Debug log\n  }\n  closeWorkflowModal() {\n    this.showWorkflowModal = false;\n    this.selectedEmployee = null;\n  }\n};\nListComponent = __decorate([Component({\n  templateUrl: 'list.component.html',\n  providers: [DatePipe]\n})], ListComponent);\nexport { ListComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}